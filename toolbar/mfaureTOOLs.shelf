<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="MF " label="MF">
    <memberTool name="velocity field from mesh"/>
    <memberTool name="opengl_nodes_script"/>
    <memberTool name="hq_sim_nodes_script"/>
  </toolshelf>

  <tool name="geo3" label="geo1" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1 (Object/geo)
set _obj_geo1 = `run("opadd -e -n -v geo geo1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1
opspareds '    group {         name    "stdswitcher4"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher4_1"         label   "Render"          parm {             name    "shop_materialpath"             baseparm             label   "Material"             export  none         }         parm {             name    "shop_materialopts"             baseparm             label   "Options"             invisible             export  none         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "viewportlod"             label   "Display As"             type    ordinal             default { "full" }             help    "Choose how the object\'s geometry should be rendered in the viewport"             menu {                 "full"      "Full Geometry"                 "points"    "Point Cloud"                 "box"       "Bounding Box"                 "centroid"  "Centroid"                 "hidden"    "Hidden"                 "subd"      "Subdivision Surface / Curves"             }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendervisibility"             label   "Render Visibility"             type    string             default { "*" }             menureplace {                 "*"                             "Visible to all"                 "primary"                       "Visible only to primary rays"                 "primary|shadow"                "Visible only to primary and shadow rays"                 "-primary"                      "Invisible to primary rays (Phantom)"                 "-diffuse"                      "Invisible to diffuse rays"                 "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                 ""                              "Invisible (Unrenderable)"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendervisibility" }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendersubd"             label   "Render Polygons As Subdivision (Mantra)"             type    toggle             default { "0" }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubd" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdstyle"             label   "Subdivision Style"             type    string             default { "mantra_catclark" }             hidewhen "{ vm_rendersubd == 0 }"             menu {                 "mantra_catclark"   "Mantra Catmull-Clark"                 "osd_catclark"      "OpenSubdiv Catmull-Clark"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdstyle" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdgroup"             label   "Subdivision Group"             type    string             default { "" }             hidewhen "{ vm_rendersubd == 0 }"             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdgroup" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_quality"             label   "Open Subdiv Quality"             type    float             default { "1" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_quality" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_vtxinterp"             label   "OSD Vtx Interp"             type    integer             default { "2" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "No vertex interpolation"                 "1" "Edges only"                 "2" "Edges and Corners"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_vtxinterp" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_fvarinterp"             label   "OSD FVar Interp"             type    integer             default { "4" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "Smooth everywhere"                 "1" "Sharpen corners only"                 "2" "Sharpen edges and corners"                 "3" "Sharpen edges and propagated corners"                 "4" "Sharpen all boundaries"                 "5" "Bilinear interpolation"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_fvarinterp" }             parmtag { "spare_category" "Geometry" }         }         group {             name    "folder0"             label   "Shading"              parm {                 name    "categories"                 label   "Categories"                 type    string                 default { "" }                 help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "reflectmask"                 label   "Reflection Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be reflected on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "refractmask"                 label   "Refraction Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be refracted on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightmask"                 label   "Light Mask"                 type    oplist                 default { "*" }                 help    "Lights that illuminate this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightcategories"                 label   "Light Selection"                 type    string                 default { "*" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_lpetag"                 label   "LPE Tag"                 type    string                 default { "" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "lpetag" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilter"                 label   "Volume Filter"                 type    string                 default { "box" }                 menu {                     "box"       "Box Filter"                     "gaussian"  "Gaussian"                     "bartlett"  "Bartlett (triangle)"                     "catrom"    "Catmull-Rom"                     "hanning"   "Hanning"                     "blackman"  "Blackman"                     "sinc"      "Sinc (sharpening)"                 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filter" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilterwidth"                 label   "Volume Filter Width"                 type    float                 default { "1" }                 range   { 0.001 5 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_matte"                 label   "Matte shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "matte" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_rayshade"                 label   "Raytrace Shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rayshade" }                 parmtag { "spare_category" "Shading" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "geo_velocityblur"                 label   "Geometry Velocity Blur"                 type    ordinal                 default { "off" }                 disablewhen "{ allowmotionblur == 0 }"                 menu {                     "off"       "No Velocity Blur"                     "on"        "Velocity Blur"                     "accelblur" "Acceleration Blur"                 }             }             parm {                 name    "geo_accelattribute"                 label   "Acceleration Attribute"                 type    string                 default { "accel" }                 hidewhen "{ geo_velocityblur != accelblur }"                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Dicing"              parm {                 name    "vm_shadingquality"                 label   "Shading Quality"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "shadingquality" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_flatness"                 label   "Dicing Flatness"                 type    float                 default { "0.05" }                 range   { 0 1 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "flatness" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu {                     "0" "Disable Predicing"                     "1" "Full Predicing"                     "2" "Precompute Bounds"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "raypredice" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_curvesurface"                 label   "Shade Curves As Surfaces"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "curvesurface" }                 parmtag { "spare_category" "Dicing" }             }         }          group {             name    "folder0_3"             label   "Geometry"              parm {                 name    "vm_rmbackface"                 label   "Backface Removal"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rmbackface" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "shop_geometrypath"                 label   "Procedural Shader"                 type    oppath                 default { "" }                 parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_forcegeometry"                 label   "Force Procedural Geometry Output"                 type    toggle                 default { "1" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_rendersubdcurves"                 label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rendersubdcurves" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpoints"                 label   "Render As Points (Mantra)"                 type    integer                 default { "2" }                 menu {                     "0" "No Point Rendering"                     "1" "Render Only Points"                     "2" "Render Unconnected Points"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpointsas"                 label   "Render Points As (Mantra)"                 type    integer                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 menu {                     "0" "Spheres"                     "1" "Circles"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpointsas" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_usenforpoints"                 label   "Use N For Point Rendering"                 type    toggle                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "usenforpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pointscale"                 label   "Point Scale"                 type    float                 default { "1" }                 disablewhen "{ vm_renderpoints == 0 }"                 range   { 0! 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pointscale" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pscalediameter"                 label   "Treat Point Scale as Diameter Instead of Radius"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pscalediameter" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_metavolume"                 label   "Metaballs as Volume"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "metavolume" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_coving"                 label   "Coving"                 type    integer                 default { "1" }                 menu {                     "0" "Disable Coving"                     "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "coving" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_materialoverride"                 label   "Material Override"                 type    string                 default { "compact" }                 menu {                     "none"      "Disabled"                     "full"      "Evaluate for Each Primitve/Point"                     "compact"   "Evaluate Once"                 }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_overridedetail"                 label   "Ignore Geometry Attribute Shaders"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "overridedetail" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_procuseroottransform"                 label   "Proc Use Root Transform"                 type    toggle                 default { "1" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "procuseroottransform" }                 parmtag { "spare_category" "Geometry" }             }         }      }      group {         name    "stdswitcher4_2"         label   "Arnold"          parm {             name    "shop_propertiespath"             label   "Default Properties"             type    oppath             default { "" }             help    "Specifies a Property SHOP that is used to resolve rendering parameter values. At render time, this SHOP (if given) is used to resolve rendering parameter values first, before looking for then on the objects being rendered."             range   { 0 1 }             parmtag { "opfilter" "!!SHOP/PROPERTIES!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "Shaders" }         }         parm {             name    "ar_user_options"             label   "User Options"             type    string             joinnext             default { "" }             help    "This string is passed to AiNodeSetAttributes() ont the Arnold node. It can contain any number of parameter/value pairs separated by whitespace (spaces, tabs, newlines) as found in .ass files."             disablewhen "{ ar_user_options_enable == 0 }"         }         parm {             name    "ar_user_options_enable"             label   "Enable"             type    toggle             default { "0" }             help    "Overrides the value of any parameter of the Arnold node."         }         group {             name    "folder_subdivision"             label   "Subdivision"              parm {                 name    "ar_subdiv_type"                 label   "Type"                 type    string                 default { "none" }                 help    "Subdivision algorithm. None ignores any subdivision and renders the mesh as it is. Linear subdivision puts vertices in the middle of each face. The Catmull-Clark algorithm is used to create smooth surfaces by recursive subdivision surface modeling. The resulting surface will always consist of a mesh of quadrilateral faces."                 menu {                     "none"      "None"                     "catclark"  "Catmull-Clark"                     "linear"    "Linear"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_iterations"                 label   "Iterations"                 type    integer                 default { "1" }                 help    "The number of iterations / levels of subdivision. With Catmull-Clark subdivision, increasing the number of iterations produces a smoother mesh."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 1! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_metric"                 label   "Adaptive Metric"                 type    string                 joinnext                 default { "auto" }                 help    "The adaptive subdivision criterion. Auto subdiv will choose between the EDGELENGTH mode and the FLATNESS depending on the displacement property of the polymesh. This means that if there is a displacement it will use the EDGELENGTH algorithm. If there is not displacement (or it is ignored in the global options) it will use FLATNESS."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "auto"          "Auto"                     "edge_length"   "Edge Length"                     "flatness"      "Flatness"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_error"                 label   "     Error"                 type    float                 default { "0" }                 help    "The \\"adaptive error\\" refers to the acceptable tessellation error as seen from the camera. If there\'s no displacement, then the error represents the distance from the subdivided mesh to the \\"true\\" or \\"limit\\" surface -- sort of a \\"flatness\\" heuristic. The smaller the error, the closer to the limit surface a mesh will be and the less inter-frame popping when the subdivision level jumps. If displacement is enabled, then the error represents the final size of the subdivided quads. A value of 0 disables adaptive subdivision."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_space"                 label   "Adaptive Space"                 type    string                 default { "raster" }                 help    "The space in which the adaptive metric is evaluated."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "raster"    "Raster"                     "object"    "Object"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_uv_smoothing"                 label   "UV Smoothing"                 type    string                 joinnext                 default { "pin_corners" }                 help    "UV smoothing algorithm."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "pin_corners"   "Pin Corners"                     "pin_borders"   "Pin Borders"                     "linear"        "Linear"                     "smooth"        "Smooth"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_smooth_derivs"                 label   "Smooth Derivatives"                 type    toggle                 default { "0" }                 help    "This option makes it possible to remove the faceted appearance from anisotropic speculars. The object must have a valid UV map for this option to work and only works if you apply at least one subdivision level to the geometry."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_merge_vertex_indices"                 label   "Merge Vertex Indices"                 type    toggle                 default { "1" }                 help    "Enable merging of the indices and data of coincident and identical vertex attribute values (UVs, normals, vertex user data). This allows the proper interpolation of vertex attributes when subdividing, and yields more compact render scenes in memory and on disk, at the cost of a slower export."                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_frustum_ignore"                 label   "Ignore Frustum Culling"                 type    toggle                 default { "0" }                 help    "Subdivision surfaces outside the view or dicing camera frustum will not be subdivided. This can be turned on globally by enabling subdiv_frustum_culling on the ROP and can be turned off for specific meshes by setting subdiv_frustum_ignore true."                 disablewhen "{ ar_subdiv_type == none }"                 parmtag { "spare_category" "Subdivision" }             }         }          group {             name    "folder_subdivision_1"             label   "Displacement"              parm {                 name    "ar_disp_height"                 label   "Height"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_zero_value"                 label   "Zero Value"                 type    float                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_padding"                 label   "Bounds Padding"                 type    float                 default { "0" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_autobump"                 label   "Autobump"                 type    toggle                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             groupcollapsible {                 name    "folder_autobump"                 label   "Autobump Visibility"                  parm {                     name    "ar_autobump_visibility_camera"                     label   "Camera"                     type    toggle                     default { "1" }                     help    "Toggle autobump for camera rays (i.e. primary or view rays)."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_shadow"                     label   "Shadow"                     type    toggle                     default { "0" }                     help    "Toggle autobump for shadow rays fired in the direct lighting calculations."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_diffuse_transmit"                     label   "Diffuse Transmission"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect diffuse transmission rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_specular_transmit"                     label   "Specular Transmission"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect specular transmission rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_diffuse_reflect"                     label   "Diffuse Reflection"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect diffuse reflection rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_specular_reflect"                     label   "Specular Reflection"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect specular reflection rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_volume"                     label   "Volume Scattering"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect volume scattering rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }             }          }          group {             name    "folder_subdivision_2"             label   "Shapes"              parm {                 name    "ar_min_pixel_width"                 label   "Minimum Pixel Width"                 type    float                 default { "0" }                 help    "If this value is non-zero, points or curves with a small on-screen width will be automatically enlarged so that they are at least the specified size in pixels. The enlargement fraction is then used in the hair shader to adjust the opacity so that the visible thickness of the hair remains the same. For a given number of AA samples, this makes it a lot easier to antialias fine hair, at the expense of render time (because of the additional transparency/depth complexity). Good values are in the range 0.2 to 0.7. Values closer to 0 are faster to render but need more AA samples. So if your scene already uses very high AA settings, you should use a low value like 0.1. For best results, you may need to increase the auto-transparency depth, and/or lower the auto-transparency threshold, but watch the effect on render times. Note that this parameter currently works with the ribbon mode only."                 range   { 0 10 }                 parmtag { "spare_category" "Curves" }             }             parm {                 name    "ar_radius"                 label   "Default Radius"                 type    float                 default { "0.05" }                 help    "Sets the default rendered radius of points or thickness of curves. This property can be overridden per point with the \\"ar_radius\\", \\"pscale\\" or \\"width\\" (curves only) attributes."                 range   { 0 10 }                 parmtag { "units" "m1" }             }             group {                 name    "folder_points"                 label   "Points"                  parm {                     name    "ar_mode"                     label   "Mode"                     type    ordinal                     default { "sphere" }                     help    "Rendering mode for points or particles. Can be spheres, or camera-facing disks or quads."                     menu {                         "disk"      "Disk"                         "sphere"    "Sphere"                         "quad"      "Quad"                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_point_scale"                     label   "Point Scale"                     type    float                     default { "1" }                     help    "A global scale factor applied to points."                     range   { 0! 10 }                 }                 parm {                     name    "ar_aspect"                     label   "Aspect"                     type    log                     default { "1" }                     help    "The aspect ratio for quads. This property can be overrriden per point by setting the \\"ar_aspect\\" or \\"spritescale\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_rotation"                     label   "Rotation"                     type    angle                     default { "0" }                     help    "The rotation angle in degrees for quads. This property can be overrriden per point by setting the \\"ar_rotation\\" or the \\"spriterot\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { -180 180 }                 }             }              group {                 name    "folder_points_1"                 label   "Curves"                  parm {                     name    "ar_curves_basis"                     label   "Basis"                     type    string                     default { "auto" }                     help    "The curves basis to interpret the knots of the input curves or open polygons. When set to \\"Automatic\\", the basis will attempt to match the closest equivalent in Arnold, ie. linear for open polygons, Bezier for Bezier curves and B-spline for NURBS."                     menu {                         "bezier"        "Bezier"                         "b-spline"      "B-Spline"                         "catmull-rom"   "Catmull-Rom"                         "linear"        "Linear"                         "auto"          "Automatic"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }                 parm {                     name    "ar_curves_mode"                     label   "Mode"                     type    string                     default { "ribbon" }                     help    "- Ribbon: This mode is recommended for fine geometry such as realistic hair, fur or fields of grass. These curves are rendered as camera-facing flat ribbons. For secondary and shadow rays, they face the incoming ray direction. This mode doesn\'t look so good for very wide hairs or dramatic zoom-ins because of the flat appearance. This mode works best with a proper hair shader (perhaps based on a Kay-Kajiya or Marschner specular model).\\\\n\\\\n- Thick: This mode resembles spaghetti. It has a circular cross section, and a normal vector that varies across the width of the hair. Thick hairs look great when zoomed in, and are specially useful for effects work, but their varying normals make them more difficult to antialias when they are small. You can use any shader with this rendering mode, including lambert, phong, etc.\\\\n\\\\n- Oriented: This mode is similar to the ribbons mode, but you can set the ribbon orientation for each knot with an \\"ar_orientations\\" vector attribute representing the direction of the normal of the ribbon. This mode can be useful to render grass strands for example."                     menu {                         "ribbon"    "Ribbon"                         "thick"     "Thick"                         "oriented"  "Oriented      "                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }             }              group {                 name    "folder_points_2"                 label   "Volumes"                  parm {                     name    "ar_step_size"                     label   "Volume Step Size"                     type    float                     default { "0" }                     help    "When ar_step_size is set to a value other than zero, then points rendered as spheres, particles and polymeshes will be rendered as volumes."                     range   { 0 1 }                 }                 parm {                     name    "ar_volume_padding"                     label   "Volume Padding"                     type    float                     default { "0" }                     help    "When rendering particles or polymeshes as volumes (when ar_step_size is non-zero), ar_volume_padding will provide extra the volume padding specified for displacement requirements"                     disablewhen "{ ar_step_size == 0 }"                     range   { 0 10 }                 }                 parm {                     name    "label_volume"                     label   "Label"                     type    label                     nolabel                     default { "" }                 }                 parm {                     name    "label_volume2"                     label   "Label"                     type    label                     nolabel                     default { "Points and polymeshes are rendered as volumes if Step Size > 0" }                 }             }              group {                 name    "folder_points_3"                 label   " VDB "                  parm {                     name    "ar_vdb_file_enable"                     label   "Export VDB File"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Export the VDB primitives as a VDB file and reference the file in the Arnold volume."                     range   { 0 1 }                 }                 parm {                     name    "ar_vdb_file"                     label   "Save to File"                     type    file                     default { "$HIP/`pythonexprs(\\"hou.pwd().path()[1:].replace(\'/\', \'_\')\\")`.$F4.vdb" }                     help    "The OpenVDB file name that the VDB primitves will be written to, and that will be referenced by the Arnold volume instead of attaching the volume data."                     disablewhen "{ ar_vdb_file_enable == 0 }"                     range   { 0 1 }                     parmtag { "filechooser_pattern" "*.vdb" }                 }                 parm {                     name    "ar_grids"                     label   "Export Grids"                     type    string                     default { "*" }                     help    "The VDB grids to export and make available in the volume shading context."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_velocity_grids"                     label   "Velocity Grids"                     type    string                     default { "*" }                     help    "Select 1 vector or 3 float grids representing velocity for motion blur."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_velocity_scale"                     label   "Velocity Scale"                     type    log                     default { "1" }                     help    "Scale the velocities by this factor."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_velocity_threshold"                     label   "Velocity Threshold"                     type    log                     default { "0.001" }                     help    "Controls filtering of noisy velocities. The default value 0.001 should have little to no visual impact, setting it to zero disables filtering entirely."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0! 1! }                 }                 parm {                     name    "ar_padding"                     label   "Bounds Padding"                     type    float                     default { "0" }                     help    "Extra padding for the volume bounds"                     range   { 0 10 }                 }                 parm {                     name    "ar_step_size_type"                     label   "Volume Step"                     type    ordinal                     joinnext                     default { "0" }                     help    "When set to auto, the step size is automatically determined by the volume plugin, yielding the minimum voxel size."                     menu {                         "auto"      "Automatic       "                         "custom"    "Custom"                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_vdb_step_size"                     label   "      Step Size"                     type    float                     default { "0.02" }                     help    "The ray marching step size. When the step type is auto, this indicates the computed step size, the minimum voxel size."                     disablewhen "{ ar_step_size_type == auto }"                     range   { 0! 10 }                 }                 parm {                     name    "ar_step_scale"                     label   "Step Scale"                     type    log                     default { "1" }                     help    "Multiply the step size by this factor, including when it\'s automatically detected."                     range   { 0.1! 10 }                 }                 parm {                     name    "ar_compress"                     label   "Compress"                     type    toggle                     invisible                     default { "1" }                     help    "Optimize voxel storage to reduce memory usage."                     range   { 0 1 }                 }             }              group {                 name    "folder_points_4"                 label   "Tessellation"                  parm {                     name    "ar_tessellation_enable"                     label   "Tessellate Primitives"                     type    toggle                     default { "1" }                     help    "Tessellate Houdini primitives such as NURBS, Bezier meshes, circles, tubes or spheres prior to sending to Arnold."                     disablewhen "{ ar_tessellation_use_rop == 1 }"                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_style"                     label   "Tessellation Style"                     type    string                     invisible                     default { "lod" }                     help    "Specifies the conversion style for the geometry. The default is\\"Level of Detail\\". Can be one of the following:\\\\n- Level of Detail: Tessellate geometry using the level of detail settings.\\\\n- Divisions: Tessellate geometry based on the number of divisions settings."                     disablewhen "{ ar_tessellation_enable == 0 }"                     menu {                         "lod"   "Level of Detail"                         "div"   "Divisions"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_ulod"                     label   "U Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for U subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_vlod"                     label   "V Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for V subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_trimlod"                     label   "Trim Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for trim curves of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }             }              group {                 name    "folder_points_5"                 label   "Procedurals"                  parm {                     name    "ar_operator_graph_enable"                     label   "Enable Operator Graph"                     type    toggle                     nolabel                     joinnext                     default { "1" }                     help    "Enables the operator graph on procedurals in this OBJ node."                     range   { 0 1 }                 }                 parm {                     name    "ar_operator_graph"                     label   "Operator Graph"                     type    oppath                     default { "" }                     help    "Specify an operator ROP graph to connect to procedurals created by this OBJ node."                     disablewhen "{ ar_operator_graph_enable == 0 }"                     parmtag { "opfilter" "!!ROP!!" }                     parmtag { "oprelative" "." }                 }             }          }          group {             name    "folder_subdivision_3"             label   "Attributes"              parm {                 name    "ar_toon_id"                 label   "Toon ID Group"                 type    string                 default { "" }                 help    "Objects in the same toon ID group will be rendered with the same silhouette, if the user_id attribute is set on the toon shader"             }             parm {                 name    "ar_attributes_detail"                 label   "Detail Attributes"                 type    string                 default { "*" }                 help    "The list of details attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.detailAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_primitive"                 label   "Primitive Attributes"                 type    string                 default { "*" }                 help    "The list of primitive attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.primitiveAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_point"                 label   "Point Attributes"                 type    string                 default { "*" }                 help    "The list of point attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.pointAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_vertex"                 label   "Vertex Attributes"                 type    string                 default { "*" }                 help    "The list of vertex attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.vertexAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }         }          group {             name    "folder_subdivision_4"             label   "Motion Blur"              parm {                 name    "ar_transform_type"                 label   "Transform Type"                 type    ordinal                 default { "2" }                 help    "The type of motion for the transformation of the object, as a hint for the matrix interpolation for transformation motion blur."                 menu {                     "linear"                "Linear"                     "rotate_about_origin"   "Rotate About Origin"                     "rotate_about_center"   "Rotate About Center"                 }                 range   { 0 2 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys_override"                 label   "Transform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_keys_override == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys_override"                 label   "Deform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys"                 label   "Deform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."                 disablewhen "{ ar_mb_dform_keys_override == 0 } { ar_mb_velocity_enable == 1 ar_mb_acceleration_enable != 1 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_enable"                 label   "Velocity Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Deformation blur will be computed from the \\"v\\" point attribute."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_attribute"                 label   "Velocity Blur"                 type    string                 default { "v" }                 help    "The velocity point attribute to use for velocity blur. The Houdini convention is \'v\'."                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_enable"                 label   "Acceleration Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_attribute"                 label   "Acceleration Blur"                 type    string                 default { "force" }                 help    "The acceleration point attribute to use for acceleration blur. The Houdini convention is \'force\' or \'accel\'. If you use use \'force\' ensure you divide by the mass."                 disablewhen "{ ar_mb_velocity_enable == 0 } { ar_mb_acceleration_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_5"             label   "Visibility"              parm {                 name    "ar_visibility_camera"                 label   "Visible to Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_shadow"                 label   "Visible to Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_transmit"                 label   "Visible to Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_transmit"                 label   "Visible to Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_reflect"                 label   "Visible to Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_reflect"                 label   "Visible to Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_volume"                 label   "Visible to Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_receive_shadows"                 label   "Receive Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable received shadows over the object."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_self_shadows"                 label   "Self Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable self-shadowing over the object."                 disablewhen "{ ar_receive_shadows == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_opaque"                 label   "Opaque"                 type    toggle                 default { "1" }                 help    "By default, Arnold will assume that objects are opaque, which lets the renderer take certain shortcuts and optimizations for maximum ray tracing speed. When this option is unchecked, the object is assumed as \\"possibly transparent\\", and Arnold will perform extra computations to support transparency and transparent shadows, according to the shader\'s opacity settings."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_matte"                 label   "Matte"                 type    toggle                 default { "0" }                 help    "Output black and zero alpha for camera rays to create a holdout."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_skip"                 label   "Skip"                 type    toggle                 default { "0" }                 help    "Do not output this object regardless of it being forced or not."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_use_light_group"                 label   "Use Light Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_light_group"                 label   "Light Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_light_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_use_shadow_group"                 label   "Use Shadow Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_shadow_group"                 label   "Shadow Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_shadow_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_trace_sets"                 label   "Trace Sets"                 type    string                 default { "" }                 menutoggle {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_trace_sets\'):" ]                     [ "            setnames = child.parm(\'ar_trace_sets\').evalAsString()" ]                     [ "            if setnames:" ]                     [ "                my_set.update(setnames.split())" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "tracesets = set()" ]                     [ "traverse(hou.node(\'/\'), tracesets)" ]                     [ "tracesets = list(tracesets)" ]                     [ "tracesets.sort()" ]                     [ "" ]                     [ "return [x for y in zip(tracesets, tracesets) for x in y]" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_sss_setname"                 label   "SSS Set"                 type    string                 default { "" }                 help    "Use this parameter to tag multiple objects as belonging to the same SSS set so that illumination will blur across object boundaries. A common use case might be blurring between teeth and gum geometry. This feature is only available when using raytraced SSS."                 menureplace {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_sss_setname\'):" ]                     [ "            setname = child.parm(\'ar_sss_setname\').evalAsString()" ]                     [ "            if setname:" ]                     [ "                my_set.update([setname])" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "sss_names = set()" ]                     [ "traverse(hou.node(\'/\'), sss_names)" ]                     [ "sss_names = list(sss_names)" ]                     [ "sss_names.sort()" ]                     [ "" ]                     [ "return [x for y in zip(sss_names, sss_names) for x in y]" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_6"             label   "Normals"              parm {                 name    "ar_smoothing"                 label   "Smoothing"                 type    toggle                 default { "1" }                 help    "Smooth/Flat normals."                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_invert_normals"                 label   "Invert Normals"                 type    toggle                 default { "0" }                 help    "Invert normals"                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_sidedness_camera"                 label   "Double-sided for Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_shadow"                 label   "Double-sided for Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_transmit"                 label   "Double-sided for Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_transmit"                 label   "Double-sided for Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_reflect"                 label   "Double-sided for Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_reflect"                 label   "Double-sided for Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_volume"                 label   "Double-sided for Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }         }      }      group {         name    "stdswitcher4_3"         label   "Misc"          parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "vport_shadeopen"             baseparm             label   "Shade Open Curves In Viewport"             export  none         }         parm {             name    "vport_displayassubdiv"             baseparm             label   "Display as Subdivision in Viewport"             invisible             export  none         }         parm {             name    "vport_onionskin"             baseparm             label   "Onion Skinning"             export  none         }     }  ' $_obj_geo1
chblockbegin
chadd -t 0 0 $_obj_geo1 ar_point_scale
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_pointscale")' $_obj_geo1/ar_point_scale
chadd -t 0 0 $_obj_geo1 ar_mb_velocity_enable
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("geo_velocityblur")' $_obj_geo1/ar_mb_velocity_enable
chadd -t 0 0 $_obj_geo1 ar_matte
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_matte")' $_obj_geo1/ar_matte
chblockend
opset -S on $_obj_geo1
chautoscope $_obj_geo1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.60000002384185791 0.60000002384185791 0.60000002384185791 $_obj_geo1
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_geo1
opexprlanguage -s hscript $_obj_geo1
opset -p on $_obj_geo1

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="velocity field from mesh" label="velocity field from mesh" icon="C:/Users/Public/pipeline/shared/maximef/Houdini/mfaure_tools/icons/velFieldMesh7.PNG">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_VEL_FIELD_FROM_MESH (Object/geo)
set _obj_VEL_FIELD_FROM_MESH = `run("opadd -e -n -v geo VEL_FIELD_FROM_MESH")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_VEL_FIELD_FROM_MESH
opspareds '    group {         name    "stdswitcher4"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher4_1"         label   "Render"          parm {             name    "shop_materialpath"             baseparm             label   "Material"             export  none         }         parm {             name    "shop_materialopts"             baseparm             label   "Options"             invisible             export  none         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "viewportlod"             label   "Display As"             type    ordinal             default { "full" }             help    "Choose how the object\'s geometry should be rendered in the viewport"             menu {                 "full"      "Full Geometry"                 "points"    "Point Cloud"                 "box"       "Bounding Box"                 "centroid"  "Centroid"                 "hidden"    "Hidden"                 "subd"      "Subdivision Surface / Curves"             }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendervisibility"             label   "Render Visibility"             type    string             default { "*" }             menureplace {                 "*"                             "Visible to all"                 "primary"                       "Visible only to primary rays"                 "primary|shadow"                "Visible only to primary and shadow rays"                 "-primary"                      "Invisible to primary rays (Phantom)"                 "-diffuse"                      "Invisible to diffuse rays"                 "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                 ""                              "Invisible (Unrenderable)"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendervisibility" }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendersubd"             label   "Render Polygons As Subdivision (Mantra)"             type    toggle             default { "0" }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubd" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdstyle"             label   "Subdivision Style"             type    string             default { "mantra_catclark" }             hidewhen "{ vm_rendersubd == 0 }"             menu {                 "mantra_catclark"   "Mantra Catmull-Clark"                 "osd_catclark"      "OpenSubdiv Catmull-Clark"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdstyle" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdgroup"             label   "Subdivision Group"             type    string             default { "" }             hidewhen "{ vm_rendersubd == 0 }"             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdgroup" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_quality"             label   "Open Subdiv Quality"             type    float             default { "1" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_quality" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_vtxinterp"             label   "OSD Vtx Interp"             type    integer             default { "2" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "No vertex interpolation"                 "1" "Edges only"                 "2" "Edges and Corners"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_vtxinterp" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_fvarinterp"             label   "OSD FVar Interp"             type    integer             default { "4" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "Smooth everywhere"                 "1" "Sharpen corners only"                 "2" "Sharpen edges and corners"                 "3" "Sharpen edges and propagated corners"                 "4" "Sharpen all boundaries"                 "5" "Bilinear interpolation"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_fvarinterp" }             parmtag { "spare_category" "Geometry" }         }         group {             name    "folder0"             label   "Shading"              parm {                 name    "categories"                 label   "Categories"                 type    string                 default { "" }                 help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "reflectmask"                 label   "Reflection Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be reflected on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "refractmask"                 label   "Refraction Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be refracted on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightmask"                 label   "Light Mask"                 type    oplist                 default { "*" }                 help    "Lights that illuminate this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightcategories"                 label   "Light Selection"                 type    string                 default { "*" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_lpetag"                 label   "LPE Tag"                 type    string                 default { "" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "lpetag" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilter"                 label   "Volume Filter"                 type    string                 default { "box" }                 menu {                     "box"       "Box Filter"                     "gaussian"  "Gaussian"                     "bartlett"  "Bartlett (triangle)"                     "catrom"    "Catmull-Rom"                     "hanning"   "Hanning"                     "blackman"  "Blackman"                     "sinc"      "Sinc (sharpening)"                 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filter" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilterwidth"                 label   "Volume Filter Width"                 type    float                 default { "1" }                 range   { 0.001 5 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_matte"                 label   "Matte shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "matte" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_rayshade"                 label   "Raytrace Shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rayshade" }                 parmtag { "spare_category" "Shading" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "geo_velocityblur"                 label   "Geometry Velocity Blur"                 type    ordinal                 default { "off" }                 disablewhen "{ allowmotionblur == 0 }"                 menu {                     "off"       "No Velocity Blur"                     "on"        "Velocity Blur"                     "accelblur" "Acceleration Blur"                 }             }             parm {                 name    "geo_accelattribute"                 label   "Acceleration Attribute"                 type    string                 default { "accel" }                 hidewhen "{ geo_velocityblur != accelblur }"                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Dicing"              parm {                 name    "vm_shadingquality"                 label   "Shading Quality"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "shadingquality" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_flatness"                 label   "Dicing Flatness"                 type    float                 default { "0.05" }                 range   { 0 1 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "flatness" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu {                     "0" "Disable Predicing"                     "1" "Full Predicing"                     "2" "Precompute Bounds"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "raypredice" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_curvesurface"                 label   "Shade Curves As Surfaces"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "curvesurface" }                 parmtag { "spare_category" "Dicing" }             }         }          group {             name    "folder0_3"             label   "Geometry"              parm {                 name    "vm_rmbackface"                 label   "Backface Removal"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rmbackface" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "shop_geometrypath"                 label   "Procedural Shader"                 type    oppath                 default { "" }                 parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_forcegeometry"                 label   "Force Procedural Geometry Output"                 type    toggle                 default { "1" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_rendersubdcurves"                 label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rendersubdcurves" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpoints"                 label   "Render As Points (Mantra)"                 type    integer                 default { "2" }                 menu {                     "0" "No Point Rendering"                     "1" "Render Only Points"                     "2" "Render Unconnected Points"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpointsas"                 label   "Render Points As (Mantra)"                 type    integer                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 menu {                     "0" "Spheres"                     "1" "Circles"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpointsas" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_usenforpoints"                 label   "Use N For Point Rendering"                 type    toggle                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "usenforpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pointscale"                 label   "Point Scale"                 type    float                 default { "1" }                 disablewhen "{ vm_renderpoints == 0 }"                 range   { 0! 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pointscale" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pscalediameter"                 label   "Treat Point Scale as Diameter Instead of Radius"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pscalediameter" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_metavolume"                 label   "Metaballs as Volume"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "metavolume" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_coving"                 label   "Coving"                 type    integer                 default { "1" }                 menu {                     "0" "Disable Coving"                     "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "coving" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_materialoverride"                 label   "Material Override"                 type    string                 default { "compact" }                 menu {                     "none"      "Disabled"                     "full"      "Evaluate for Each Primitve/Point"                     "compact"   "Evaluate Once"                 }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_overridedetail"                 label   "Ignore Geometry Attribute Shaders"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "overridedetail" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_procuseroottransform"                 label   "Proc Use Root Transform"                 type    toggle                 default { "1" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "procuseroottransform" }                 parmtag { "spare_category" "Geometry" }             }         }      }      group {         name    "stdswitcher4_2"         label   "Arnold"          parm {             name    "shop_propertiespath"             label   "Default Properties"             type    oppath             default { "" }             help    "Specifies a Property SHOP that is used to resolve rendering parameter values. At render time, this SHOP (if given) is used to resolve rendering parameter values first, before looking for then on the objects being rendered."             range   { 0 1 }             parmtag { "opfilter" "!!SHOP/PROPERTIES!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "Shaders" }         }         parm {             name    "ar_user_options"             label   "User Options"             type    string             joinnext             default { "" }             help    "This string is passed to AiNodeSetAttributes() ont the Arnold node. It can contain any number of parameter/value pairs separated by whitespace (spaces, tabs, newlines) as found in .ass files."             disablewhen "{ ar_user_options_enable == 0 }"         }         parm {             name    "ar_user_options_enable"             label   "Enable"             type    toggle             default { "0" }             help    "Overrides the value of any parameter of the Arnold node."         }         group {             name    "folder_subdivision"             label   "Subdivision"              parm {                 name    "ar_subdiv_type"                 label   "Type"                 type    string                 default { "none" }                 help    "Subdivision algorithm. None ignores any subdivision and renders the mesh as it is. Linear subdivision puts vertices in the middle of each face. The Catmull-Clark algorithm is used to create smooth surfaces by recursive subdivision surface modeling. The resulting surface will always consist of a mesh of quadrilateral faces."                 menu {                     "none"      "None"                     "catclark"  "Catmull-Clark"                     "linear"    "Linear"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_iterations"                 label   "Iterations"                 type    integer                 default { "1" }                 help    "The number of iterations / levels of subdivision. With Catmull-Clark subdivision, increasing the number of iterations produces a smoother mesh."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 1! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_metric"                 label   "Adaptive Metric"                 type    string                 joinnext                 default { "auto" }                 help    "The adaptive subdivision criterion. Auto subdiv will choose between the EDGELENGTH mode and the FLATNESS depending on the displacement property of the polymesh. This means that if there is a displacement it will use the EDGELENGTH algorithm. If there is not displacement (or it is ignored in the global options) it will use FLATNESS."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "auto"          "Auto"                     "edge_length"   "Edge Length"                     "flatness"      "Flatness"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_error"                 label   "     Error"                 type    float                 default { "0" }                 help    "The \\"adaptive error\\" refers to the acceptable tessellation error as seen from the camera. If there\'s no displacement, then the error represents the distance from the subdivided mesh to the \\"true\\" or \\"limit\\" surface -- sort of a \\"flatness\\" heuristic. The smaller the error, the closer to the limit surface a mesh will be and the less inter-frame popping when the subdivision level jumps. If displacement is enabled, then the error represents the final size of the subdivided quads. A value of 0 disables adaptive subdivision."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_space"                 label   "Adaptive Space"                 type    string                 default { "raster" }                 help    "The space in which the adaptive metric is evaluated."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "raster"    "Raster"                     "object"    "Object"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_uv_smoothing"                 label   "UV Smoothing"                 type    string                 joinnext                 default { "pin_corners" }                 help    "UV smoothing algorithm."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "pin_corners"   "Pin Corners"                     "pin_borders"   "Pin Borders"                     "linear"        "Linear"                     "smooth"        "Smooth"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_smooth_derivs"                 label   "Smooth Derivatives"                 type    toggle                 default { "0" }                 help    "This option makes it possible to remove the faceted appearance from anisotropic speculars. The object must have a valid UV map for this option to work and only works if you apply at least one subdivision level to the geometry."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_merge_vertex_indices"                 label   "Merge Vertex Indices"                 type    toggle                 default { "1" }                 help    "Enable merging of the indices and data of coincident and identical vertex attribute values (UVs, normals, vertex user data). This allows the proper interpolation of vertex attributes when subdividing, and yields more compact render scenes in memory and on disk, at the cost of a slower export."                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_frustum_ignore"                 label   "Ignore Frustum Culling"                 type    toggle                 default { "0" }                 help    "Subdivision surfaces outside the view or dicing camera frustum will not be subdivided. This can be turned on globally by enabling subdiv_frustum_culling on the ROP and can be turned off for specific meshes by setting subdiv_frustum_ignore true."                 disablewhen "{ ar_subdiv_type == none }"                 parmtag { "spare_category" "Subdivision" }             }         }          group {             name    "folder_subdivision_1"             label   "Displacement"              parm {                 name    "ar_disp_height"                 label   "Height"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_zero_value"                 label   "Zero Value"                 type    float                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_padding"                 label   "Bounds Padding"                 type    float                 default { "0" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_autobump"                 label   "Autobump"                 type    toggle                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             groupcollapsible {                 name    "folder_autobump"                 label   "Autobump Visibility"                  parm {                     name    "ar_autobump_visibility_camera"                     label   "Camera"                     type    toggle                     default { "1" }                     help    "Toggle autobump for camera rays (i.e. primary or view rays)."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_shadow"                     label   "Shadow"                     type    toggle                     default { "0" }                     help    "Toggle autobump for shadow rays fired in the direct lighting calculations."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_diffuse_transmit"                     label   "Diffuse Transmission"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect diffuse transmission rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_specular_transmit"                     label   "Specular Transmission"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect specular transmission rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_diffuse_reflect"                     label   "Diffuse Reflection"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect diffuse reflection rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_specular_reflect"                     label   "Specular Reflection"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect specular reflection rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_volume"                     label   "Volume Scattering"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect volume scattering rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }             }          }          group {             name    "folder_subdivision_2"             label   "Shapes"              parm {                 name    "ar_min_pixel_width"                 label   "Minimum Pixel Width"                 type    float                 default { "0" }                 help    "If this value is non-zero, points or curves with a small on-screen width will be automatically enlarged so that they are at least the specified size in pixels. The enlargement fraction is then used in the hair shader to adjust the opacity so that the visible thickness of the hair remains the same. For a given number of AA samples, this makes it a lot easier to antialias fine hair, at the expense of render time (because of the additional transparency/depth complexity). Good values are in the range 0.2 to 0.7. Values closer to 0 are faster to render but need more AA samples. So if your scene already uses very high AA settings, you should use a low value like 0.1. For best results, you may need to increase the auto-transparency depth, and/or lower the auto-transparency threshold, but watch the effect on render times. Note that this parameter currently works with the ribbon mode only."                 range   { 0 10 }                 parmtag { "spare_category" "Curves" }             }             parm {                 name    "ar_radius"                 label   "Default Radius"                 type    float                 default { "0.05" }                 help    "Sets the default rendered radius of points or thickness of curves. This property can be overridden per point with the \\"ar_radius\\", \\"pscale\\" or \\"width\\" (curves only) attributes."                 range   { 0 10 }                 parmtag { "units" "m1" }             }             group {                 name    "folder_points"                 label   "Points"                  parm {                     name    "ar_mode"                     label   "Mode"                     type    ordinal                     default { "sphere" }                     help    "Rendering mode for points or particles. Can be spheres, or camera-facing disks or quads."                     menu {                         "disk"      "Disk"                         "sphere"    "Sphere"                         "quad"      "Quad"                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_point_scale"                     label   "Point Scale"                     type    float                     default { "1" }                     help    "A global scale factor applied to points."                     range   { 0! 10 }                 }                 parm {                     name    "ar_aspect"                     label   "Aspect"                     type    log                     default { "1" }                     help    "The aspect ratio for quads. This property can be overrriden per point by setting the \\"ar_aspect\\" or \\"spritescale\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_rotation"                     label   "Rotation"                     type    angle                     default { "0" }                     help    "The rotation angle in degrees for quads. This property can be overrriden per point by setting the \\"ar_rotation\\" or the \\"spriterot\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { -180 180 }                 }             }              group {                 name    "folder_points_1"                 label   "Curves"                  parm {                     name    "ar_curves_basis"                     label   "Basis"                     type    string                     default { "auto" }                     help    "The curves basis to interpret the knots of the input curves or open polygons. When set to \\"Automatic\\", the basis will attempt to match the closest equivalent in Arnold, ie. linear for open polygons, Bezier for Bezier curves and B-spline for NURBS."                     menu {                         "bezier"        "Bezier"                         "b-spline"      "B-Spline"                         "catmull-rom"   "Catmull-Rom"                         "linear"        "Linear"                         "auto"          "Automatic"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }                 parm {                     name    "ar_curves_mode"                     label   "Mode"                     type    string                     default { "ribbon" }                     help    "- Ribbon: This mode is recommended for fine geometry such as realistic hair, fur or fields of grass. These curves are rendered as camera-facing flat ribbons. For secondary and shadow rays, they face the incoming ray direction. This mode doesn\'t look so good for very wide hairs or dramatic zoom-ins because of the flat appearance. This mode works best with a proper hair shader (perhaps based on a Kay-Kajiya or Marschner specular model).\\\\n\\\\n- Thick: This mode resembles spaghetti. It has a circular cross section, and a normal vector that varies across the width of the hair. Thick hairs look great when zoomed in, and are specially useful for effects work, but their varying normals make them more difficult to antialias when they are small. You can use any shader with this rendering mode, including lambert, phong, etc.\\\\n\\\\n- Oriented: This mode is similar to the ribbons mode, but you can set the ribbon orientation for each knot with an \\"ar_orientations\\" vector attribute representing the direction of the normal of the ribbon. This mode can be useful to render grass strands for example."                     menu {                         "ribbon"    "Ribbon"                         "thick"     "Thick"                         "oriented"  "Oriented      "                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }             }              group {                 name    "folder_points_2"                 label   "Volumes"                  parm {                     name    "ar_step_size"                     label   "Volume Step Size"                     type    float                     default { "0" }                     help    "When ar_step_size is set to a value other than zero, then points rendered as spheres, particles and polymeshes will be rendered as volumes."                     range   { 0 1 }                 }                 parm {                     name    "ar_volume_padding"                     label   "Volume Padding"                     type    float                     default { "0" }                     help    "When rendering particles or polymeshes as volumes (when ar_step_size is non-zero), ar_volume_padding will provide extra the volume padding specified for displacement requirements"                     disablewhen "{ ar_step_size == 0 }"                     range   { 0 10 }                 }                 parm {                     name    "label_volume"                     label   "Label"                     type    label                     nolabel                     default { "" }                 }                 parm {                     name    "label_volume2"                     label   "Label"                     type    label                     nolabel                     default { "Points and polymeshes are rendered as volumes if Step Size > 0" }                 }             }              group {                 name    "folder_points_3"                 label   " VDB "                  parm {                     name    "ar_vdb_file_enable"                     label   "Export VDB File"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Export the VDB primitives as a VDB file and reference the file in the Arnold volume."                     range   { 0 1 }                 }                 parm {                     name    "ar_vdb_file"                     label   "Save to File"                     type    file                     default { "$HIP/`pythonexprs(\\"hou.pwd().path()[1:].replace(\'/\', \'_\')\\")`.$F4.vdb" }                     help    "The OpenVDB file name that the VDB primitves will be written to, and that will be referenced by the Arnold volume instead of attaching the volume data."                     disablewhen "{ ar_vdb_file_enable == 0 }"                     range   { 0 1 }                     parmtag { "filechooser_pattern" "*.vdb" }                 }                 parm {                     name    "ar_grids"                     label   "Export Grids"                     type    string                     default { "*" }                     help    "The VDB grids to export and make available in the volume shading context."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_velocity_grids"                     label   "Velocity Grids"                     type    string                     default { "*" }                     help    "Select 1 vector or 3 float grids representing velocity for motion blur."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_velocity_scale"                     label   "Velocity Scale"                     type    log                     default { "1" }                     help    "Scale the velocities by this factor."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_velocity_threshold"                     label   "Velocity Threshold"                     type    log                     default { "0.001" }                     help    "Controls filtering of noisy velocities. The default value 0.001 should have little to no visual impact, setting it to zero disables filtering entirely."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0! 1! }                 }                 parm {                     name    "ar_padding"                     label   "Bounds Padding"                     type    float                     default { "0" }                     help    "Extra padding for the volume bounds"                     range   { 0 10 }                 }                 parm {                     name    "ar_step_size_type"                     label   "Volume Step"                     type    ordinal                     joinnext                     default { "0" }                     help    "When set to auto, the step size is automatically determined by the volume plugin, yielding the minimum voxel size."                     menu {                         "auto"      "Automatic       "                         "custom"    "Custom"                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_vdb_step_size"                     label   "      Step Size"                     type    float                     default { "0.02" }                     help    "The ray marching step size. When the step type is auto, this indicates the computed step size, the minimum voxel size."                     disablewhen "{ ar_step_size_type == auto }"                     range   { 0! 10 }                 }                 parm {                     name    "ar_step_scale"                     label   "Step Scale"                     type    log                     default { "1" }                     help    "Multiply the step size by this factor, including when it\'s automatically detected."                     range   { 0.1! 10 }                 }                 parm {                     name    "ar_compress"                     label   "Compress"                     type    toggle                     invisible                     default { "1" }                     help    "Optimize voxel storage to reduce memory usage."                     range   { 0 1 }                 }             }              group {                 name    "folder_points_4"                 label   "Tessellation"                  parm {                     name    "ar_tessellation_enable"                     label   "Tessellate Primitives"                     type    toggle                     default { "1" }                     help    "Tessellate Houdini primitives such as NURBS, Bezier meshes, circles, tubes or spheres prior to sending to Arnold."                     disablewhen "{ ar_tessellation_use_rop == 1 }"                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_style"                     label   "Tessellation Style"                     type    string                     invisible                     default { "lod" }                     help    "Specifies the conversion style for the geometry. The default is\\"Level of Detail\\". Can be one of the following:\\\\n- Level of Detail: Tessellate geometry using the level of detail settings.\\\\n- Divisions: Tessellate geometry based on the number of divisions settings."                     disablewhen "{ ar_tessellation_enable == 0 }"                     menu {                         "lod"   "Level of Detail"                         "div"   "Divisions"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_ulod"                     label   "U Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for U subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_vlod"                     label   "V Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for V subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_trimlod"                     label   "Trim Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for trim curves of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }             }              group {                 name    "folder_points_5"                 label   "Procedurals"                  parm {                     name    "ar_operator_graph_enable"                     label   "Enable Operator Graph"                     type    toggle                     nolabel                     joinnext                     default { "1" }                     help    "Enables the operator graph on procedurals in this OBJ node."                     range   { 0 1 }                 }                 parm {                     name    "ar_operator_graph"                     label   "Operator Graph"                     type    oppath                     default { "" }                     help    "Specify an operator ROP graph to connect to procedurals created by this OBJ node."                     disablewhen "{ ar_operator_graph_enable == 0 }"                     parmtag { "opfilter" "!!ROP!!" }                     parmtag { "oprelative" "." }                 }             }          }          group {             name    "folder_subdivision_3"             label   "Attributes"              parm {                 name    "ar_toon_id"                 label   "Toon ID Group"                 type    string                 default { "" }                 help    "Objects in the same toon ID group will be rendered with the same silhouette, if the user_id attribute is set on the toon shader"             }             parm {                 name    "ar_attributes_detail"                 label   "Detail Attributes"                 type    string                 default { "*" }                 help    "The list of details attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.detailAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_primitive"                 label   "Primitive Attributes"                 type    string                 default { "*" }                 help    "The list of primitive attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.primitiveAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_point"                 label   "Point Attributes"                 type    string                 default { "*" }                 help    "The list of point attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.pointAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_vertex"                 label   "Vertex Attributes"                 type    string                 default { "*" }                 help    "The list of vertex attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.vertexAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }         }          group {             name    "folder_subdivision_4"             label   "Motion Blur"              parm {                 name    "ar_transform_type"                 label   "Transform Type"                 type    ordinal                 default { "2" }                 help    "The type of motion for the transformation of the object, as a hint for the matrix interpolation for transformation motion blur."                 menu {                     "linear"                "Linear"                     "rotate_about_origin"   "Rotate About Origin"                     "rotate_about_center"   "Rotate About Center"                 }                 range   { 0 2 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys_override"                 label   "Transform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_keys_override == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys_override"                 label   "Deform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys"                 label   "Deform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."                 disablewhen "{ ar_mb_dform_keys_override == 0 } { ar_mb_velocity_enable == 1 ar_mb_acceleration_enable != 1 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_enable"                 label   "Velocity Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Deformation blur will be computed from the \\"v\\" point attribute."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_attribute"                 label   "Velocity Blur"                 type    string                 default { "v" }                 help    "The velocity point attribute to use for velocity blur. The Houdini convention is \'v\'."                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_enable"                 label   "Acceleration Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_attribute"                 label   "Acceleration Blur"                 type    string                 default { "force" }                 help    "The acceleration point attribute to use for acceleration blur. The Houdini convention is \'force\' or \'accel\'. If you use use \'force\' ensure you divide by the mass."                 disablewhen "{ ar_mb_velocity_enable == 0 } { ar_mb_acceleration_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_5"             label   "Visibility"              parm {                 name    "ar_visibility_camera"                 label   "Visible to Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_shadow"                 label   "Visible to Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_transmit"                 label   "Visible to Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_transmit"                 label   "Visible to Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_reflect"                 label   "Visible to Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_reflect"                 label   "Visible to Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_volume"                 label   "Visible to Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_receive_shadows"                 label   "Receive Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable received shadows over the object."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_self_shadows"                 label   "Self Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable self-shadowing over the object."                 disablewhen "{ ar_receive_shadows == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_opaque"                 label   "Opaque"                 type    toggle                 default { "1" }                 help    "By default, Arnold will assume that objects are opaque, which lets the renderer take certain shortcuts and optimizations for maximum ray tracing speed. When this option is unchecked, the object is assumed as \\"possibly transparent\\", and Arnold will perform extra computations to support transparency and transparent shadows, according to the shader\'s opacity settings."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_matte"                 label   "Matte"                 type    toggle                 default { "0" }                 help    "Output black and zero alpha for camera rays to create a holdout."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_skip"                 label   "Skip"                 type    toggle                 default { "0" }                 help    "Do not output this object regardless of it being forced or not."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_use_light_group"                 label   "Use Light Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_light_group"                 label   "Light Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_light_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_use_shadow_group"                 label   "Use Shadow Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_shadow_group"                 label   "Shadow Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_shadow_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_trace_sets"                 label   "Trace Sets"                 type    string                 default { "" }                 menutoggle {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_trace_sets\'):" ]                     [ "            setnames = child.parm(\'ar_trace_sets\').evalAsString()" ]                     [ "            if setnames:" ]                     [ "                my_set.update(setnames.split())" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "tracesets = set()" ]                     [ "traverse(hou.node(\'/\'), tracesets)" ]                     [ "tracesets = list(tracesets)" ]                     [ "tracesets.sort()" ]                     [ "" ]                     [ "return [x for y in zip(tracesets, tracesets) for x in y]" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_sss_setname"                 label   "SSS Set"                 type    string                 default { "" }                 help    "Use this parameter to tag multiple objects as belonging to the same SSS set so that illumination will blur across object boundaries. A common use case might be blurring between teeth and gum geometry. This feature is only available when using raytraced SSS."                 menureplace {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_sss_setname\'):" ]                     [ "            setname = child.parm(\'ar_sss_setname\').evalAsString()" ]                     [ "            if setname:" ]                     [ "                my_set.update([setname])" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "sss_names = set()" ]                     [ "traverse(hou.node(\'/\'), sss_names)" ]                     [ "sss_names = list(sss_names)" ]                     [ "sss_names.sort()" ]                     [ "" ]                     [ "return [x for y in zip(sss_names, sss_names) for x in y]" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_6"             label   "Normals"              parm {                 name    "ar_smoothing"                 label   "Smoothing"                 type    toggle                 default { "1" }                 help    "Smooth/Flat normals."                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_invert_normals"                 label   "Invert Normals"                 type    toggle                 default { "0" }                 help    "Invert normals"                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_sidedness_camera"                 label   "Double-sided for Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_shadow"                 label   "Double-sided for Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_transmit"                 label   "Double-sided for Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_transmit"                 label   "Double-sided for Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_reflect"                 label   "Double-sided for Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_reflect"                 label   "Double-sided for Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_volume"                 label   "Double-sided for Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }         }      }      group {         name    "stdswitcher4_3"         label   "Misc"          parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "vport_shadeopen"             baseparm             label   "Shade Open Curves In Viewport"             export  none         }         parm {             name    "vport_displayassubdiv"             baseparm             label   "Display as Subdivision in Viewport"             invisible             export  none         }         parm {             name    "vport_onionskin"             baseparm             label   "Onion Skinning"             export  none         }     }  ' $_obj_VEL_FIELD_FROM_MESH
chblockbegin
chadd -t 0 0 $_obj_VEL_FIELD_FROM_MESH ar_point_scale
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_pointscale")' $_obj_VEL_FIELD_FROM_MESH/ar_point_scale
chadd -t 0 0 $_obj_VEL_FIELD_FROM_MESH ar_mb_velocity_enable
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("geo_velocityblur")' $_obj_VEL_FIELD_FROM_MESH/ar_mb_velocity_enable
chadd -t 0 0 $_obj_VEL_FIELD_FROM_MESH ar_matte
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_matte")' $_obj_VEL_FIELD_FROM_MESH/ar_matte
chblockend
opset -S on $_obj_VEL_FIELD_FROM_MESH
chautoscope $_obj_VEL_FIELD_FROM_MESH +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.60000002384185791 0.60000002384185791 0.60000002384185791 $_obj_VEL_FIELD_FROM_MESH
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_VEL_FIELD_FROM_MESH
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH
opcf $_obj_VEL_FIELD_FROM_MESH

# Node $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1 (Sop/testgeometry_pighead)
set _obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1 = `run("opadd -e -n -v testgeometry_pighead testgeometry_pighead1")`
oplocate -x `$arg2 + -2.2594108019639942` -y `$arg3 + 1.8058101472995096` $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1
opparm $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1 addshader ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1
opuserdata -n '___Version___' -v '' $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1
opuserdata -n '___toolcount___' -v '1' $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1
opuserdata -n '___toolid___' -v 'sop_testgeometry_pighead' $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1

# Node $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1 (Sop/MF_VEL_FIELD_MESH)
set _obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1 = `run("opadd -e -n -v MF_VEL_FIELD_MESH MF_VEL_FIELD_MESH1")`
oplocate -x `$arg2 + 0.23649754500818315` -y `$arg3 + -1.4375804458679862` $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1
chblockbegin
chadd -t 0 0 $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1 offsetx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$F*.05' $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1/offsetx
chblockend
opparm $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1
opuserdata -n '___Version___' -v '' $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1
opuserdata -n 'nodeshape' -v 'circle' $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1

# Node $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1 (Sop/MF_CURL_FLOW)
set _obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1 = `run("opadd -e -n -v MF_CURL_FLOW MF_CURL_FLOW1")`
oplocate -x `$arg2 + -2.0139116202945999` -y `$arg3 + -2.7129782331092271` $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1
opparm $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1  color_ramp ( 2 )
opparm -V 1.0 $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1 generation_curves ( 0 ) jitter_point ( 0.27000000000000002 ) color_ramp2pos ( 1 ) color_ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1
opuserdata -n '___Version___' -v '1.0' $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1
opuserdata -n 'nodeshape' -v 'circle' $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1

# Node $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1 (Sop/MF_CURVE_TO_ORGANIC)
set _obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1 = `run("opadd -e -n -v MF_CURVE_TO_ORGANIC MF_CURVE_TO_ORGANIC1")`
oplocate -x `$arg2 + -2.0139116202945999` -y `$arg3 + -6.2357307067457519` $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1
opparm $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1  color ( 2 ) width ( 5 ) random ( 2 )
opparm $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1 OUTPUT ( 1 ) polywire ( 1 ) div ( 8 ) color1c ( 0 0.45000000000000001 0.90000000000000002 ) color2pos ( 1 ) color2c ( 0.90000000000000002 0 0.90000000000000002 ) width1interp ( bspline ) width2pos ( 0.35553047060966492 ) width2value ( 1 ) width2interp ( bspline ) width3pos ( 0.54176074266433716 ) width3value ( 1 ) width3interp ( bspline ) width4pos ( 0.67720091342926025 ) width4value ( 1 ) width4interp ( bspline ) width5pos ( 1 ) width5interp ( bspline ) random2pos ( 1 ) random2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1
opuserdata -n '___Version___' -v '' $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1
opuserdata -n 'nodeshape' -v 'circle' $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1
opcf ..
opcf $_obj_VEL_FIELD_FROM_MESH

# Node $_obj_VEL_FIELD_FROM_MESH_IN_GEO (Sop/null)
set _obj_VEL_FIELD_FROM_MESH_IN_GEO = `run("opadd -e -n -v null IN_GEO")`
oplocate -x `$arg2 + -2.2594108019639942` -y `$arg3 + 0.46374795417348597` $_obj_VEL_FIELD_FROM_MESH_IN_GEO
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_IN_GEO
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_IN_GEO
opuserdata -n '___Version___' -v '17.5.293' $_obj_VEL_FIELD_FROM_MESH_IN_GEO

# Node $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES (Sop/null)
set _obj_VEL_FIELD_FROM_MESH_OUT_CURVES = `run("opadd -e -n -v null OUT_CURVES")`
oplocate -x `$arg2 + -2.0189116378779701` -y `$arg3 + -4.6960537035539911` $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES
opuserdata -n '___Version___' -v '17.5.293' $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES

# Node $_obj_VEL_FIELD_FROM_MESH_OUT_VELOCITY_FEIL (Sop/null)
set _obj_VEL_FIELD_FROM_MESH_OUT_VELOCITY_FEIL = `run("opadd -e -n -v null OUT_VELOCITY_FEIL")`
oplocate -x `$arg2 + 0.231497527424813` -y `$arg3 + -3.795984634850528` $_obj_VEL_FIELD_FROM_MESH_OUT_VELOCITY_FEIL
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_OUT_VELOCITY_FEIL
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_OUT_VELOCITY_FEIL
opuserdata -n '___Version___' -v '17.5.293' $_obj_VEL_FIELD_FROM_MESH_OUT_VELOCITY_FEIL

# Node $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES_MESHES (Sop/null)
set _obj_VEL_FIELD_FROM_MESH_OUT_CURVES_MESHES = `run("opadd -e -n -v null OUT_CURVES_MESHES")`
oplocate -x `$arg2 + -2.0189116378779701` -y `$arg3 + -7.861444011762762` $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES_MESHES
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES_MESHES
opexprlanguage -s hscript $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES_MESHES
opuserdata -n '___Version___' -v '17.5.293' $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES_MESHES
oporder -e testgeometry_pighead1 MF_VEL_FIELD_MESH1 MF_CURL_FLOW1 IN_GEO OUT_CURVES OUT_VELOCITY_FEIL MF_CURVE_TO_ORGANIC1 OUT_CURVES_MESHES 
opcf ..
opset -p on $_obj_VEL_FIELD_FROM_MESH

opcf $arg1
opcf $_obj_VEL_FIELD_FROM_MESH
opwire -n $_obj_VEL_FIELD_FROM_MESH_IN_GEO -0 $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1
opwire -n $_obj_VEL_FIELD_FROM_MESH_IN_GEO -0 $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1
opwire -n $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1 -1 $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1
opwire -n $_obj_VEL_FIELD_FROM_MESH_testgeometry_pighead1 -0 $_obj_VEL_FIELD_FROM_MESH_IN_GEO
opwire -n $_obj_VEL_FIELD_FROM_MESH_MF_CURL_FLOW1 -0 $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES
opwire -n $_obj_VEL_FIELD_FROM_MESH_MF_VEL_FIELD_MESH1 -0 $_obj_VEL_FIELD_FROM_MESH_OUT_VELOCITY_FEIL
opwire -n $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES -0 $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1
opwire -n $_obj_VEL_FIELD_FROM_MESH_MF_CURVE_TO_ORGANIC1 -0 $_obj_VEL_FIELD_FROM_MESH_OUT_CURVES_MESHES
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_VEL_FIELD_FROM_MESH
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_VEL_FIELD_FROM_MESH
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="opengl_nodes_script" label="OPENGL_OUTPUT" icon="ROP_opengl">
    <toolMenuContext name="network">
      <contextOpType>Driver/opengl</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('hq_sim'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_out_name_preview (Driver/opengl)
set _out_name_preview = `run("opadd -e -n -v opengl name_preview")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_out_name_preview
chblockbegin
chadd -t 0 0 $_out_name_preview f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_out_name_preview/f1
chadd -t 0 0 $_out_name_preview f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_out_name_preview/f2
chblockend
opparm -V 17.5.293 $_out_name_preview trange ( normal ) f ( f1 f2 1 ) stdswitch ( 1 1 1 1 1 1 ) picture ( '$OUT/playblast/$HIPNAME/$OS/$HIPNAME.$OS.$F4.png' ) gamma ( 2.2000000000000002 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_name_preview
opexprlanguage -s hscript $_out_name_preview
opset -p on $_out_name_preview
opcf $arg1

# Node $_out_name_preview1 (Driver/hq_sim)
set _out_name_preview1 = `run("opadd -e -n -v hq_sim name_preview1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -1.4907570975046305` $_out_name_preview1
opparm $_out_name_preview1  environment ( 0 ) create_directories ( 0 )
chblockbegin
chadd -t 9.9666666666666668 9.9666666666666668 $_out_name_preview1 f1
chkey -t 9.9666666666666668 -v 1 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_out_name_preview1/f1
chadd -t 9.9666666666666668 9.9666666666666668 $_out_name_preview1 f2
chkey -t 9.9666666666666668 -v 240 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_out_name_preview1/f2
chblockend
opparm $_out_name_preview1 hq_job_name ( '$OS' ) hq_server ( rf-pc-deadmongo:5000 ) hq_hfs ( 'C:/Program Files/Side Effects Software/Houdini 17.5.293' ) hq_clients ( MF-PC-188 ) select_clients ( 0 ) select_client_groups ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_name_preview1
opexprlanguage -s hscript $_out_name_preview1
opuserdata -n '___Version___' -v '' $_out_name_preview1
opset -p on $_out_name_preview1

opcf $arg1
opcf $arg1
opwire -n $_out_name_preview -0 $_out_name_preview1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_out_name_preview1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_out_name_preview
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="hq_sim_nodes_script" label="Arnold output" icon="opdef:/Driver/arnold?IconSVG">
    <toolMenuContext name="network">
      <contextOpType>Driver/hq_sim</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('arnold'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_out_name_ARNOLD (Driver/hq_sim)
set _out_name_ARNOLD = `run("opadd -e -n -v hq_sim name_ARNOLD")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_out_name_ARNOLD
opparm $_out_name_ARNOLD  environment ( 0 ) create_directories ( 0 )
chblockbegin
chadd -t 9.9666666666666668 9.9666666666666668 $_out_name_ARNOLD f1
chkey -t 9.9666666666666668 -v 1 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_out_name_ARNOLD/f1
chadd -t 9.9666666666666668 9.9666666666666668 $_out_name_ARNOLD f2
chkey -t 9.9666666666666668 -v 240 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_out_name_ARNOLD/f2
chblockend
opparm $_out_name_ARNOLD hq_job_name ( '$OS' ) hq_server ( rf-pc-deadmongo:5000 ) hq_hfs ( 'C:/Program Files/Side Effects Software/Houdini 17.5.293' ) hq_clients ( MF-PC-188 ) select_clients ( 0 ) select_client_groups ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_name_ARNOLD
opexprlanguage -s hscript $_out_name_ARNOLD
opuserdata -n '___Version___' -v '' $_out_name_ARNOLD
opset -p on $_out_name_ARNOLD
opcf $arg1

# Node $_out_name (Driver/arnold)
set _out_name = `run("opadd -e -n -v arnold name")`
oplocate -x `$arg2 + 0` -y `$arg3 + 1.7972094587439233` $_out_name
opspareds '    parm {         name    "execute"         baseparm         label   "Render to Disk"         joinnext         export  none     }     parm {         name    "renderdialog"         baseparm         label   "Controls..."         nolabel         export  none     }     parm {         name    "trange"         baseparm         label   "Valid Frame Range"         export  none     }     parm {         name    "f"         baseparm         label   "Start/End/Inc"         export  none     }     parm {         name    "take"         baseparm         label   "Render with Take"         export  none     }     group {         name    "main6"         label   " Main "          groupsimple {             name    "folder_camera2"             label   "Camera"              parm {                 name    "camera"                 baseparm                 label   "Camera"                 export  none             }             groupsimple {                 name    "folder_subdivision2"                 label   "Subdivision"                  parm {                     name    "ar_subdiv_dicing_camera_enable"                     baseparm                     label   "Use Alternate Dicing Camera"                     nolabel                     joinnext                     export  none                 }                 parm {                     name    "ar_subdiv_dicing_camera"                     baseparm                     label   "Dicing Camera"                     export  none                 }                 parm {                     name    "ar_subdiv_frustum_culling"                     baseparm                     label   "Enable"                     nolabel                     joinnext                     export  none                 }                 parm {                     name    "ar_subdiv_frustum_padding"                     baseparm                     label   "Frustum Culling"                     export  none                 }             }          }          parm {             name    "target"             baseparm             label   "Render Target"             invisible             export  none         }         parm {             name    "sepparm"             baseparm             label   "Separator"             invisible             export  none         }         groupsimple {             name    "folder_objects2"             label   "Objects"              parm {                 name    "vobject"                 baseparm                 label   "Candidate Objects"                 export  none             }             parm {                 name    "forceobject"                 baseparm                 label   "Force Objects"                 export  none             }             parm {                 name    "excludeobject"                 baseparm                 label   "Exclude Objects"                 export  none             }             parm {                 name    "phantom_objects"                 baseparm                 label   "Forced Phantom"                 export  none             }             parm {                 name    "matte_objects"                 baseparm                 label   "Forced Matte"                 export  none             }         }          groupsimple {             name    "folder_shaders2"             label   "Shaders"              parm {                 name    "ar_environment"                 baseparm                 label   "Environment"                 export  none             }             parm {                 name    "ar_forced_materials"                 baseparm                 label   "Forced Materials"                 export  none             }             parm {                 name    "ar_shader_override"                 baseparm                 label   "Shader Override"                 export  none             }         }          parm {             name    "obj_light_sep"             baseparm             label   "Separator"             invisible             export  none         }         groupsimple {             name    "folder_lights2"             label   "Lights"              parm {                 name    "sololight"                 baseparm                 label   "Solo Light"                 export  none             }             parm {                 name    "alights"                 baseparm                 label   "Candidate Lights"                 export  none             }             parm {                 name    "forcelights"                 baseparm                 label   "Force Lights"                 export  none             }             parm {                 name    "excludelights"                 baseparm                 label   "Exclude Lights"                 export  none             }             parm {                 name    "soho_autoheadlight"                 baseparm                 label   "Headlight Creation"                 invisible                 export  none             }             parm {                 name    "light_fog_sep"                 baseparm                 label   "Separator"                 invisible                 export  none             }         }          parm {             name    "vfog"             baseparm             label   "Visible Fog"             invisible             export  none         }         parm {             name    "soho_viewport_menu"             baseparm             label   "Show in Viewport Menu"             export  none         }         parm {             name    "soho_initsim"             baseparm             label   "Initialize Simulation OPs"             export  none         }         parm {             name    "ar_render_selection_only"             baseparm             label   "Render Selection Only"             export  none         }         parm {             name    "ar_render_selection_others"             baseparm             label   "Render Others As"             export  none         }     }      group {         name    "main6_1"         label   "Properties"          parm {             name    "shop_propertiespath"             baseparm             label   "Default Properties"             export  none         }         parm {             name    "ar_user_options"             baseparm             label   "User Options"             joinnext             export  none         }         parm {             name    "ar_user_options_enable"             baseparm             label   "Enable"             export  none         }         group {             name    "folder0"             label   "Output"              parm {                 name    "ar_picture"                 label   "Output Picture"                 type    file                 default { "ip" }                 menureplace {                     [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBrender\')\\")`" ]                 }                 parmtag { "filechooser_mode" "write" }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "vm_picture"                 label   "Compat. Output Picture"                 type    string                 invisible                 default { [ "chs(\\"ar_picture\\")" hscript-expr ] }                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "override_camerares"                 label   "Override Camera Resolution"                 type    toggle                 default { "0" }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "res_fraction"                 label   "Resolution Scale"                 type    string                 default { "specific" }                 hidewhen "{ override_camerares == 0 }"                 menu {                     "0.1"       "1/10 (One Tenth Resolution)"                     "0.2"       "1/5 (One Fifth Resolution)"                     "0.25"      "1/4 (Quarter Resolution)"                     "0.3333333" "1/3 (One Third Resolution)"                     "0.5"       "1/2 (Half Resolution)"                     "0.6666666" "2/3 (Two Thirds Resolution)"                     "0.75"      "3/4 (Three Quarter Resolution)"                     "specific"  "User Specified Resolution"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "res_override"                 label   "Resolution"                 type    intvector2                 joinnext                 size    2                 default { "640" "480" }                 hidewhen "{ override_camerares == 0 } { res_fraction != specific }"                 range   { -1 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "res_overrideMenu"                 label   "Choose Resolution"                 type    button                 nolabel                 default { "0" }                 hidewhen "{ override_camerares == 0 } { res_fraction != specific }"                 menumini {                     [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBres\')\\")`" ]                 }                 parmtag { "script_callback" "opparm . res_override ( `arg(\\"$script_value\\", 0)` `arg(\\"$script_value\\", 1)` aspect_override ( `arg(\\"$script_value\\", 2)` )" }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "aspect_override"                 label   "Pixel Aspect Ratio"                 type    float                 default { "1" }                 hidewhen "{ override_camerares == 0 }"                 range   { 0.05 2 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "my_sep"                 label   "Separator"                 type    separator                 default { "" }                 hidewhen "{ override_camerares == 0 }"             }             parm {                 name    "ar_overscan_enable"                 label   "Overscan"                 type    toggle                 default { "0" }                 help    "Enable rendered image overscan."             }             parm {                 name    "ar_denoise"                 label   "Denoise"                 type    toggle                 default { "0" }                 help    "Enable optix denoising on beauty AOV"                 hidewhen "{ ar_platform == darwin }"             }             parm {                 name    "ar_denoise_display"                 label   "Display denoised AOVs"                 type    toggle                 default { "0" }                 help    "Enable optix denoising AOV display.  Only original or denoised AOVs may be displayed together"                 hidewhen "{ ar_platform == darwin }"             }             parm {                 name    "ar_output_variance"                 label   "Output Variance AOV"                 type    toggle                 default { "0" }                 help    "Add an extra variance AOV to the beauty for arnold denoising.  If the AOVs N, Z, diffuse_albedo then they will be used to enhance the denoising."                 disablewhen "{ ar_picture_format != exr }"             }             parm {                 name    "ar_overscan"                 label   "Overscan Margins"                 type    intvector4                 size    4                 default { "0" "ch(\\"ar_overscanx\\")" "ch(\\"ar_overscanx\\")" "ch(\\"ar_overscanx\\")" }                 help    "Extend the render region by those amounts in pixels. EXR output will fully respect  the overscan region with differing data and display windows, but the other  image formats will simply enlarge the final image resolution to incorporate overscan since they cannot accommodate data outside the display area of the image."                 hidewhen "{ ar_overscan_enable == 0 }"                 range   { 0! 100 }             }             parm {                 name    "ar_overscan_label"                 label   " "                 type    label                 size    4                 default { "Top" "Bottom" "Left" "Right" }                 hidewhen "{ ar_overscan_enable == 0 }"             }             parm {                 name    "ar_overscan_separator"                 label   "Separator"                 type    separator                 default { "" }                 hidewhen "{ ar_overscan_enable == 0 }"             }             parm {                 name    "ar_picture_format"                 label   "Image Format"                 type    string                 joinnext                 default { "exr" }                 help    "Output image file format."                 menu {                     "exr"       "OpenEXR"                     "deepexr"   "Deep OpenEXR"                     "tiff"      "TIFF"                     "png"       "PNG"                     "jpeg"      "JPEG"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_tiling"                 label   "                Tiling"                 type    integer                 default { "0" }                 help    "Allows to save the image in scanline or tiled mode. It seems Scanline works better with composition packages like Nuke or Fusion."                 hidewhen "{ ar_picture_format != exr ar_picture_format != deepexr ar_picture_format != tiff }"                 menu {                     "0" "Scanline  "                     "1" "Tiled"                 }                 range   { 0 10 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_format"                 label   "Pixel Format"                 type    string                 joinnext                 default { "0" }                 help    "TIFF bit depth."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     "int8"      "Integer 8 bit "                     "int16"     "Integer 16 bit"                     "int32"     "Integer 32 bit"                     "float32"   "Float 32 bit"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_compression"                 label   " Compression"                 type    string                 default { "lzw" }                 help    "Specifies the compression mode of the TIFF file."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     "none"      "None"                     "lzw"       "LZW"                     "ccittrle"  "CCITT RLE"                     "zip"       "Zip"                     "packbits"  "PackBits"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu()" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_tiff_color_family\').eval())" ]                     [ "if kwargs[\'node\'].parm(\'ar_tiff_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_tiff_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_tiff_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_png_format"                 label   "Pixel Format"                 type    string                 default { "0" }                 help    "PNG bit depth."                 hidewhen "{ ar_picture_format != png }"                 menu {                     "int8"  "Integer 8 bit "                     "int16" "Integer 16 bit"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_png_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != png }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu()" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_png_color_family\').eval())" ]                     [ "if kwargs[\'node\'].parm(\'ar_png_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_png_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_png_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != png }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_png_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_compression"                 label   "Compression"                 type    string                 default { "zip" }                 help    "Specifies the compression mode of the EXR file:\\n\\n- None: Disables all compression.\\n\\n- Run Length Encoding (RLE): This is a basic form of compression that is comparable to that used by standard Targa files.\\n\\n- Zip (per scanline): Zip style compression applied to individual scanlines.\\n\\n- Zip (16 scanline blocks): Zip style compression applied to blocks of 16 scanlines at time. This tends to be the most effective style of compression to use with rendered images that do not have film grain applied.\\n\\n- PIZ: This uses a new combined wavelet / Huffman compression. This form of compression is quite effective when dealing with grainy images, and will often surpass any of the other options under grainy conditions.\\n\\n- PXR24: This form of compression from Pixar converts data to 24 bit then uses Zip compression. It is lossless for half and 32bit integer data and slightly lossy for 32bit float data.\\n\\n- B44: This form of compression is lossy for half data and stores 32bit data uncompressed.\\n\\n- B44A: An extension to B44 where areas of flat color are further compressed. Regular B44 compresses uniformly regardless of image content.\\n\\n- DWAA: JPEG-like lossy compression format contributed by DreamWorks Animation. Compresses 32 scanlines together.\\n\\n- DWAB: Same as DWAA, but compresses blocks of 256 scanlines."                 hidewhen "{ ar_picture_format != exr }"                 menu {                     "none"  "None                     "                     "rle"   "Run Length Encoding (RLE)"                     "zips"  "Zip (per scanline)"                     "zip"   "Zip (16 scanline blocks)"                     "piz"   "PIZ"                     "pxr24" "PXR24"                     "b44"   "B44"                     "b44a"  "B44A"                     "dwaa"  "DWAA"                     "dwab"  "DWAB"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != exr }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu(filter_linear=True)" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_exr_color_family\').eval(), filter_linear=True)" ]                     [ "if kwargs[\'node\'].parm(\'ar_exr_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_exr_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != exr }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_exr_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family, filter_linear=True)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_jpeg_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != jpeg }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu()" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_jpeg_color_family\').eval())" ]                     [ "if kwargs[\'node\'].parm(\'ar_jpeg_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_jpeg_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_jpeg_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != jpeg }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_jpeg_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_jpeg_quality"                 label   "JPEG Quality"                 type    integer                 default { "100" }                 help    "JPEG compression quality."                 hidewhen "{ ar_picture_format != jpeg }"                 range   { 1! 100! }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_half_precision"                 label   "Half Precision"                 type    toggle                 default { "0" }                 help    "Store pixels as half-floats instead of floats."                 hidewhen "{ ar_picture_format != exr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_preserve_layer_name"                 label   "Preserve Layer Name"                 type    toggle                 default { "0" }                 help    "If checked, will store the AOV in a layer different with the name of the AOV, and not the RGB."                 hidewhen "{ ar_picture_format != exr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_autocrop"                 label   "Autocrop"                 type    toggle                 default { "0" }                 help    "Automatically crop uniform borders."                 disablewhen "{ ar_picture_tiling != 0 }"                 hidewhen "{ ar_picture_format != exr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_output_padded"                 label   "Pad Crop Region"                 type    toggle                 default { "0" }                 help    "Defines a padding around the crop region."                 hidewhen "{ ar_picture_format == exr } { ar_picture_format == deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_dither"                 label   "Dithering"                 type    toggle                 default { "1" }                 help    "Applies a small amount of noise to the final pixel values. This helps minimize banding artifacts apparent on 8-bit output image file formats such as TIFF8."                 hidewhen "{ ar_picture_format == exr } { ar_picture_format == deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_unpremult_alpha"                 label   "Unpremultiply Alpha"                 type    toggle                 default { "0" }                 help    "Specifies whether the main RGB channel is premultiplied with the alpha channel (the default) or not. It only works with 8-bit output images."                 hidewhen "{ ar_picture_format != tiff }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_skip_alpha"                 label   "Skip Alpha"                 type    toggle                 default { "0" }                 help    "Skip the alpha channel of RGBA outputs."                 hidewhen "{ ar_picture_format != tiff }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_subpixel_merge"                 label   "Merge Subpixel Samples"                 type    toggle                 default { "1" }                 help    "Nearby subpixel samples will be merged."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_beauty_tolerance"                 label   "Beauty Tolerance"                 type    log                 default { "0.01" }                 help    "Beauty tolerance over which samples will not be merged together."                 disablewhen "{ ar_deepexr_subpixel_merge == 0 }"                 hidewhen "{ ar_picture_format != deepexr }"                 range   { 0! 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_alpha_tolerance"                 label   "Alpha Tolerance"                 type    log                 default { "0.01" }                 help    "Alpha tolerance over which samples will not be merged together."                 disablewhen "{ ar_deepexr_subpixel_merge == 0 }"                 hidewhen "{ ar_picture_format != deepexr }"                 range   { 0! 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_depth_tolerance"                 label   "Depth Tolerance"                 type    log                 default { "0.01" }                 help    "Depth tolerance over which samples will not be merged together."                 disablewhen "{ ar_deepexr_subpixel_merge == 0 }"                 hidewhen "{ ar_picture_format != deepexr }"                 range   { 0! 10 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_beauty_half_precision"                 label   "Half Precision for Beauty"                 type    toggle                 default { "0" }                 help    "Store beauty layer as half-floats instead of floats."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_alpha_half_precision"                 label   "Half Precision for Alpha"                 type    toggle                 default { "0" }                 help    "Store alpha layer as half-floats instead of floats."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_depth_half_precision"                 label   "Half Precision for Depth"                 type    toggle                 default { "0" }                 help    "Store depth layer as half-floats instead of floats."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_use_RGB_opacity"                 label   "RGB Opacity"                 type    toggle                 default { "0" }                 help    "Write out RGB opacity, rather than just alpha. Nuke can read these images but cannot display them."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_enable_filtering"                 label   "Filter Beauty"                 type    toggle                 default { "1" }                 help    "If set to false disable any filtering operation on this layer\'s raw data -- useful for normals or ID layers."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_append"                 label   "Append"                 type    toggle                 default { "0" }                 help    "Append to existing tiles when re-rendering the same image."                 disablewhen "{ ar_picture_tiling != 1 }"                 hidewhen "{ ar_picture_format != exr ar_picture_format != deepexr ar_picture_format != tiff }"                 parmtag { "spare_category" "Output" }             }             multiparm {                 name    "ar_exr_metadata"                 label    "Metadata"                 hidewhen "{ ar_picture_format != exr ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }                  parm {                     name    "ar_exr_metadata_key#"                     label   "Key"                     type    string                     joinnext                     default { "metadata#" }                     help    "Metadata key name."                     range   { 0 1 }                 }                 parm {                     name    "ar_exr_metadata_type#"                     label   "   Type"                     type    ordinal                     default { "4" }                     help    "Metadata type."                     menu {                         "int"       "Integer"                         "float"     "Float"                         "point2"    "Point2"                         "matrix"    "Matrix"                         "string"    "String"                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_exr_metadata_int_value#"                     label   "Value"                     type    integer                     default { "0" }                     help    "Metadata integer value."                     hidewhen "{ ar_exr_metadata_type# != int }"                     range   { 0 10 }                 }                 parm {                     name    "ar_exr_metadata_float_value#"                     label   "Value"                     type    float                     default { "0" }                     help    "Metadata float value."                     hidewhen "{ ar_exr_metadata_type# != float }"                     range   { 0 10 }                 }                 parm {                     name    "ar_exr_metadata_point2_value#"                     label   "Value"                     type    vector2                     size    2                     default { "0" "0" }                     help    "Metadata Point2 value."                     hidewhen "{ ar_exr_metadata_type# != point2 }"                     range   { -1 1 }                 }                 parm {                     name    "ar_exr_metadata_matrix_value#"                     label   "Value"                     type    float                     size    16                     default { "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" }                     help    "Metadata matrix value."                     hidewhen "{ ar_exr_metadata_type# != matrix }"                     range   { 0 10 }                 }                 parm {                     name    "ar_exr_metadata_string_value#"                     label   "Value"                     type    string                     default { "" }                     help    "Metadata string value."                     hidewhen "{ ar_exr_metadata_type# != string }"                     range   { 0 1 }                 }             }              parm {                 name    "my_sep_output1"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_pixel_filter_type"                 label   "Pixel Filter"                 type    string                 default { "gaussian_filter" }                 help    "The filter type used for averaging individual subpixel samples into a final pixel color. The default gaussian-2.0 is an excellent filter, you will rarely need anything other than gaussian."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 menu {                     "blackman_harris_filter"    "Blackman-Harris"                     "box_filter"                "Box"                     "catrom_filter"             "Catmull-Rom"                     "closest_filter"            "Closest"                     "farthest_filter"           "Farthest"                     "gaussian_filter"           "Gaussian"                     "heatmap_filter"            "Heatmap"                     "mitnet_filter"             "Mitchell-Netravali"                     "sinc_filter"               "Sinc"                     "triangle_filter"           "Triangle"                     "variance_filter"           "Variance"                     "contour_filter"            "Contour"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_variance_filter_weights"                 label   "Variance Filter Weights"                 type    string                 default { "box" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != variance_filter }"                 menu {                     "blackman_harris"   "Blackman-Harris"                     "box"               "Box"                     "catrom"            "Catmull-Rom"                     "gaussian"          "Gaussian"                     "mitnet"            "Mitchell-Netravali"                     "sinc"              "Sinc"                     "triangle"          "Triangle"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_width"                 label   "Filter Width"                 type    float                 default { "2" }                 help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type == blackman_harris_filter } { ar_pixel_filter_type == sinc_filter } { ar_pixel_filter_type == farthest_filter } { ar_pixel_filter_type == closest_filter } { ar_pixel_filter_type == box_filter } { ar_pixel_filter_type == catrom_filter } { ar_pixel_filter_type == heatmap_filter } { ar_pixel_filter_type == mitnet_filter }"                 range   { 0! 6 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_width_blackman_harris"                 label   "Filter Width"                 type    float                 default { "3" }                 help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != blackman_harris_filter }"                 range   { 0! 6 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_width_sinc"                 label   "Filter Width"                 type    float                 default { "6" }                 help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != sinc_filter }"                 range   { 0! 10 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_farthest_domain"                 label   "Farthest Domain"                 type    string                 default { "first_hit" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != farthest_filter }"                 menu {                     "first_hit" "First Hit                   "                     "all_hits"  "All Hits"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_variance_scalar_mode"                 label   "Variance Scalar Mode"                 type    toggle                 default { "0" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != variance_filter }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_heatmap_minimum"                 label   "Heatmap Minimum"                 type    float                 default { "0" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != heatmap_filter }"                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_heatmap_maximum"                 label   "Heatmap Maximum"                 type    float                 default { "1" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != heatmap_filter }"                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "my_sep_output2"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_AA_sample_clamp_enable"                 label   "Clamp Camera Samples"                 type    toggle                 default { "0" }                 help    "When enabled, pixel samples will be clamped to the specified maximum value. This can make it easier to anti-alias certain high-dynamic range effects such as bright motion blurred specular streaks (at the cost of reduced contrast)."                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_AA_sample_clamp_affects_aovs"                 label   "Clamp Camera Samples in AOVs"                 type    toggle                 default { "0" }                 help    "When enabled, pixel samples will be clamped to the specified maximum value. This can make it easier to anti-alias certain high-dynamic range effects such as bright motion blurred specular streaks (at the cost of reduced contrast)."                 disablewhen "{ ar_AA_sample_clamp_enable != 1 }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_AA_sample_clamp"                 label   "Camera Sample Clamp"                 type    float                 default { "10" }                 help    "Enabling this control, pixel samples will be clamped to the specified maximum value. This can make it easier to anti-alias certain high-dynamic range effects such as bright motion blurred specular streaks (at the cost of reduced contrast)."                 disablewhen "{ ar_AA_sample_clamp_enable == 0 }"                 range   { 1e-05! 100 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_indirect_sample_clamp"                 label   "Indirect Sample Clamp"                 type    float                 default { "10" }                 help    "Works similarly to AA_sample_clamp, but only affects indirect light, so that specular highlights from direct lighting are preserved. This makes it possible to clamp fireflies more aggressively without affecting the final render significantly. It is set to 10.0 by default. Lower values result in more aggressive noise reduction, possibly at the expense of dynamic range."                 range   { 0! 20 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "my_sep_output3"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_enable_aov_composition"                 label   "Enable AOV Composition"                 type    toggle                 invisible                 default { "1" }                 help    "Globally control whether any capable AOVs will automatically compose through semi-opaque surfaces rendered using auto-transparency. AOVs which are composable (i.e., which have opacity-blending capability) are provided in the standard, lambert, and hair shaders."                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_multicam"                 label   "Enable Multicam"                 type    toggle                 invisible                 default { "1" }                 help    "Helper flag for HtoA to determine if muticam is supported in the render context. IPR contexts disable multicam."                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_aov_shaders"                 label   "AOV Shaders"                 type    oppath                 default { "" }                 help    "AOV shader will be evaluated after the regular surface shader. With this it is possible to add shaders to set specific AOVs without modifying the original shader tree, such as the popular Cryptomatte automatic ID matte shader."                 parmtag { "opfilter" "!!SHOP!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Output" }             }             multiparm {                 name    "ar_aovs"                 label    "AOVs"                 parmtag { "spare_category" "Output" }                  parm {                     name    "ar_enable_aov#"                     label   "Enable AOV #"                     type    toggle                     nolabel                     joinnext                     default { "1" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_label#"                     label   "AOV #"                     type    string                     default { "" }                     help    "The AOV name"                     disablewhen "{ ar_enable_aov# == 0 }"                     menureplace {                         [ "import htoa.properties" ]                         [ "return htoa.properties.aovMenu()" ]                         language python                     }                     parmtag { "script_callback" "opparm . vm_vextype_plane$script_multiparm_index ( `ifs(index(\\",Pz,Af,Render_Time,Op_Id,Prim_Id,level,specularlevel,diffuselevel,direct_samples,indirect_samples,\\", \\",$script_value,\\")>=0, \\"float\\", \\"vector\\")` )" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_exr_enable_layer_name#"                     label   "Enable Layer Name #"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 1 ar_aov_picture_format# != beauty ar_aov_picture_format# != exr ar_aov_picture_format# != deepexr } { ar_aov_separate# == 0 ar_picture_format == tiff } { ar_aov_separate# == 0 ar_picture_format == jpg } { ar_aov_separate# == 0 ar_picture_format == png } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == tiff } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == jpg } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == png }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_exr_layer_name#"                     label   "Layer Name"                     type    string                     default { "" }                     help    "The EXR layer name.  If this is the empty string then the ar_aov_label is used as the exr layer name as usual."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_exr_enable_layer_name# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# != beauty ar_aov_picture_format# != exr ar_aov_picture_format# != deepexr } { ar_aov_separate# == 0 ar_picture_format == tiff } { ar_aov_separate# == 0 ar_picture_format == jpg } { ar_aov_separate# == 0 ar_picture_format == png } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == tiff } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == jpg } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == png }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_lpe_enable#"                     label   "Enable Light Path Expression"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Enable a custom light path expression for this AOV."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_lpe#"                     label   "Light Path Expr."                     type    string                     default { "" }                     help    "Custom light path expression for this AOV."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_lpe_enable# == 0 } { ar_aov_camera# == camera }"                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.lpeMenu()" ]                         language python                     }                     parmtag { "script_callback" "kwargs[\'parm\'].set(kwargs[\'script_value\'].replace(\' \', \'\'))" }                     parmtag { "script_callback_language" "python" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_camera_enable#"                     label   "Enable AOV Camera"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Enable using a separable camera for this AOV."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_camera#"                     label   "Camera"                     type    oppath                     default { "" }                     help    "The camera to use for this AOV. When the camera is different from the main camera, you need to specify a separate file to render the AOV to. Also, the AOV will be ignored in interactive rendering contexts."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_camera_enable# == 0 }"                     parmtag { "opfilter" "!!OBJ/CAMERA!!" }                     parmtag { "oprelative" "." }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_separate#"                     label   "Output to Separate File"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Save this deep raster plane to a different disk file than the main image."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_separate_file#"                     label   "Separate File"                     type    file                     default { "" }                     help    "Save this deep raster plane to a different disk file than the main image.\\nThis does *not* work when rendering to mplay."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 } { ar_aov_camera# == camera }"                     menureplace {                         [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBrender\')\\")`" ]                     }                     parmtag { "filechooser_mode" "write" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_denoise_enable#"                     label   "Denoise"                     type    toggle                     default { "0" }                     help    "Enable optix denoiser for this AOV.  This is not supported in GPU mode."                     disablewhen "{ ar_render_device == GPU }"                     hidewhen "{ ar_platform == darwin }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_picture_format#"                     label   "Image Format"                     type    string                     joinnext                     default { "beauty" }                     help    "AOV image file format."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 }"                     menu {                         "beauty"    "Same as Beauty "                         "exr"       "OpenEXR"                         "deepexr"   "Deep OpenEXR"                         "tiff"      "TIFF"                         "png"       "PNG"                         "jpeg"      "JPEG"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_type#"                     label   "  Type"                     type    string                     default { "RGB" }                     help    "The type associated with the AOV"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     menu {                         "RGB"       "RGB"                         "RGBA"      "RGBA"                         "BOOL"      "Boolean"                         "INT"       "Integer"                         "UINT"      "Unsigned Integer"                         "FLOAT"     "Float"                         "VECTOR"    "Vector"                         "VECTOR2"   "Vector 2D"                         "NODE"      "Node Pointer"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_exr_precision#"                     label   "Precision"                     type    string                     default { "beauty" }                     help    "EXR precision."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# != beauty ar_aov_picture_format# != exr ar_aov_picture_format# != deepexr } { ar_aov_separate# == 0 ar_picture_format == tiff } { ar_aov_separate# == 0 ar_picture_format == jpg } { ar_aov_separate# == 0 ar_picture_format == png } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == tiff } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == jpg } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == png }"                     menu {                         "beauty"    "Same as Beauty  "                         "half"      "Float 16 bit"                         "float"     "Float 32 bit"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_tiff_format#"                     label   "Pixel Format"                     type    string                     default { "beauty" }                     help    "TIFF bit depth."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 }"                     hidewhen "{ ar_aov_picture_format# != tiff }"                     menu {                         "beauty"    "Same as Beauty "                         "int8"      "Integer 8 bit "                         "int16"     "Integer 16 bit"                         "int32"     "Integer 32 bit"                         "float32"   "Float 32 bit"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_png_format#"                     label   "Pixel Format"                     type    string                     default { "beauty" }                     help    "PNG bit depth."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 }"                     hidewhen "{ ar_aov_picture_format# != png }"                     menu {                         "beauty"    "Same as Beauty "                         "int8"      "Integer 8 bit "                         "int16"     "Integer 16 bit"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter#"                     label   "Pixel Filter"                     type    string                     joinnext                     default { "beauty" }                     help    "The filter type used for averaging individual subpixel samples into a final pixel color. The default gaussian-2.0 is an excellent filter, you will rarely need anything other than gaussian."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     menu {                         "beauty"                    "Same as Beauty "                         "blackman_harris_filter"    "Blackman-Harris"                         "box_filter"                "Box"                         "catrom_filter"             "Catmull-Rom"                         "closest_filter"            "Closest"                         "farthest_filter"           "Farthest"                         "gaussian_filter"           "Gaussian"                         "heatmap_filter"            "Heatmap"                         "mitnet_filter"             "Mitchell-Netravali"                         "sinc_filter"               "Sinc"                         "triangle_filter"           "Triangle"                         "variance_filter"           "Variance"                         "contour_filter"            "Contour"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_deep_enable_filtering#"                     label   "Filter Deep AOV"                     type    toggle                     default { "1" }                     help    "If set to false disable any filtering operation on this layer\'s raw data -- useful for normals or ID layers."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format != deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# != deepexr ar_aov_picture_format# != beauty } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format != deepexr }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_variance_filter_weights#"                     label   "Variance Filter Weights"                     type    string                     default { "box" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != variance_filter }"                     menu {                         "blackman_harris"   "Blackman-Harris"                         "box"               "Box"                         "catrom"            "Catmull-Rom"                         "gaussian"          "Gaussian"                         "mitnet"            "Mitchell-Netravali"                         "sinc"              "Sinc"                         "triangle"          "Triangle"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_width#"                     label   "Width"                     type    float                     default { "2" }                     help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_enable_aov# == 0 } { ar_aov_pixel_filter# == beauty } { ar_aov_pixel_filter# == blackman_harris_filter } { ar_aov_pixel_filter# == sinc_filter } { ar_aov_pixel_filter# == farthest_filter } { ar_aov_pixel_filter# == closest_filter } { ar_aov_pixel_filter# == box_filter } { ar_aov_pixel_filter# == catrom_filter } { ar_aov_pixel_filter# == heatmap_filter } { ar_aov_pixel_filter# == mitnet_filter }"                     range   { 0! 6 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_width_blackman_harris#"                     label   "Width"                     type    float                     default { "3" }                     help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != blackman_harris_filter }"                     range   { 0! 6 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_width_sinc#"                     label   "Width"                     type    float                     default { "6" }                     help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != sinc_filter }"                     range   { 0! 10 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_farthest_domain#"                     label   "Farthest Domain"                     type    string                     default { "first_hit" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != farthest_filter }"                     menu {                         "first_hit" "First Hit                   "                         "all_hits"  "All Hits"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_variance_scalar_mode#"                     label   "Variance Scalar Mode"                     type    toggle                     default { "0" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != variance_filter }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_heatmap_minimum#"                     label   "Heatmap Minimum"                     type    float                     default { "0" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != heatmap_filter }"                     range   { 0 1 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_heatmap_maximum#"                     label   "Heatmap Maximum"                     type    float                     default { "1" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != heatmap_filter }"                     range   { 0 1 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_deep_merge_tolerance#"                     label   "Deep AOV Tolerance"                     type    log                     default { "0.01" }                     help    "Tolerance over which the AOV samples will not be merged together."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_deepexr_subpixel_merge == 0 } { ar_aov_separate# == 0 ar_picture_format != deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# != deepexr ar_aov_picture_format# != beauty } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format != deepexr }"                     range   { 0! 10 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_deep_half_precision#"                     label   "Half Precision for Deep AOV"                     type    toggle                     default { "0" }                     help    "Use 16-bit floats for this AOV filtering."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format != deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# != deepexr ar_aov_picture_format# != beauty } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format != deepexr }"                     parmtag { "spare_category" "Output" }                 }             }              parm {                 name    "ar_overridden"                 label   "Overridden Parameters"                 type    toggle                 invisible                 default { "0" }                 help    "Parameters have been overridden by one of the configuration files in $HH/soho/overrides."                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "ar_AA_samples"                 label   "Camera (AA)"                 type    integer                 default { "3" }                 help    "Controls the amount of rays per pixel that will be traced from the camera. The higher the number of samples, the better the anti-aliasing quality, and the longer the render times. The exact number of rays per pixel is the square of this value. For example, an AA Samples value of 3 means 3x3 = 9 pixel samples."                 range   { 1 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_enable_adaptive_sampling"                 label   "Adaptive Sampling"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Enable adaptive AA samples based on the variance level, according to the minimum and maximum AA samples."                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_samples_max"                 label   "Max. Camera (AA)"                 type    integer                 default { "20" }                 help    "When adaptive sampling is enabled, this control the maximum amount of rays per pixel that will be traced from the camera. The exact number of rays per pixel is the square of this value. Note that setting this parameter to a value lower or equal to AA samples will disable adaptive sampling."                 disablewhen "{ ar_enable_adaptive_sampling == 0 }"                 range   { 1 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_samples_extra"                 label   "Extra AA"                 type    integer                 invisible                 default { [ "ch(\\"ar_AA_samples_max\\") - ch(\\"ar_AA_samples\\")" hscript-expr ] }                 help    "Maximum extra AA levels. For UI logic purposes only."                 range   { 0 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_adaptive_threshold"                 label   "Adaptive Threshold"                 type    log                 default { "0.015" }                 help    "The variance-based threshold. Adapative sampling will stop if the variance is below this level."                 disablewhen "{ ar_enable_adaptive_sampling == 0 } { ar_AA_samples_extra <= 0 }"                 range   { 0.0001 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_diffuse_samples"                 label   "Diffuse"                 type    integer                 default { "2" }                 help    "The number of hemispherical rays fired for indirect diffuse GI shader evaluations. Increase this number to reduce the diffuse GI noise. The exact number of hemispherical rays is the square of this value. This is not supported for GPU renders."                 disablewhen "{ ar_render_device == GPU ar_platform != darwin }"                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_specular_samples"                 label   "Specular"                 type    integer                 default { "2" }                 help    "The number of BRDF rays fired for indirect glossy specular shader evaluations. Increase this number to reduce the noise in soft/blurry reflections. The exact number of rays is the square of this value. This is not supported for GPU renders."                 disablewhen "{ ar_render_device == GPU ar_platform != darwin }"                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_transmission_samples"                 label   "Transmission"                 type    integer                 default { "2" }                 help    "The number of samples used to simulate the microfacet-based glossy transmission evaluations. This is not supported for GPU renders."                 disablewhen "{ ar_render_device == GPU ar_platform != darwin }"                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_sss_samples"                 label   "SSS"                 type    integer                 default { "2" }                 help    "The number of SSS lighting samples (direct and indirect) that will be taken to estimate lighting within a radius of the point being shaded. Higher values produce a cleaner solution, but will take longer to render. This is not supported for GPU renders."                 disablewhen "{ ar_render_device == GPU ar_platform != darwin }"                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_volume_samples"                 label   "Volume Indirect"                 type    integer                 default { "2" }                 help    "The number of indirect diffuse samples for volumes. Higher values reduce the noise, but will take longer to render. This is not supported for GPU renders."                 disablewhen "{ ar_render_device == GPU ar_platform != darwin }"                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_indirect_specular_blur"                 label   "Indirect Specular Blur"                 type    integer                 default { "1" }                 help    "Sets indirect specular blurring to reduce caustic noise. Setting to zero gives the most accurate but also noisy renders, while higher values blur caustics to reduce noise."                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_seed"                 label   "Noise Seed"                 type    integer                 default { "$F" }                 help    "The noise pattern seed for AA sampling."                 range   { 0 9999 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_enable_progressive_render"                 label   "Progressive Render"                 type    toggle                 default { "0" }                 help    "Enable progressive sampling."                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_sss_use_autobump"                 label   "Autobump for SSS"                 type    toggle                 default { "0" }                 help    "Take autobump into account for SSS calculations. This will result in more details in the SSS, at the cost of a slower render."                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "info_samples_spacer"                 label   " "                 type    label                 default { "" }                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "info_samples_header"                 label   " "                 type    label                 default { "Estimated Rays / Pixel" }                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_camera"                 label   "Camera (AA) Rays"                 type    string                 default { [ "__import__(\'htoa\').properties.sampleInfoCamera()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_diffuse"                 label   "Diffuse Rays"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoDiffuse()" python ] [ "__import__(\'htoa\').properties.sampleInfoDiffuseDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_specular"                 label   "Specular Rays"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoSpecular()" python ] [ "__import__(\'htoa\').properties.sampleInfoSpecularDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_transmission"                 label   "Transmission Rays"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoTransmission()" python ] [ "__import__(\'htoa\').properties.sampleInfoTransmissionDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_total"                 label   "Total Rays (no lights)"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoTotal()" python ] [ "__import__(\'htoa\').properties.sampleInfoTotalDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Ray Depth"              parm {                 name    "ar_GI_total_depth"                 label   "Total"                 type    integer                 default { "10" }                 help    "Specifies the total maximum recursion depth of any ray in the scene."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_diffuse_depth"                 label   "Diffuse"                 type    integer                 default { "1" }                 help    "The maximum number of times a diffuse ray can bounce."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_specular_depth"                 label   "Specular"                 type    integer                 default { "1" }                 help    "The maximum number of times a ray can be glossily reflected."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_transmission_depth"                 label   "Transmission"                 type    integer                 default { "8" }                 help    "The maximum number of times a ray can be refracted."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_volume_depth"                 label   "Volume"                 type    integer                 default { "0" }                 help    "The maximum number of times a ray can bounce for multiple scattering in a volume."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_auto_transparency_depth"                 label   "Transparency"                 type    integer                 default { "10" }                 help    "The number of allowed transparency hits. With 0 objects will be treated as opaque."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_low_light_threshold"                 label   "Low Light Threshold"                 type    float                 default { "0.001" }                 help    "Specify an illumination value below which Arnold will skip firing shadow rays to each light source, reducing rendering time."                 range   { 0! 0.1 }                 parmtag { "spare_category" "Ray Depth" }             }         }          group {             name    "folder0_3"             label   "Motion Blur"              parm {                 name    "ar_mb_xform_enable"                 label   "Enable Transformation Blur"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Enable motion blur."                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result specially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_enable == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_enable"                 label   "Enable Deformation Blur"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Motion blur will take into account geometry deformation. It should only be enabled when objects in the scene change shape quickly enough, since this option uses more memory and renders slower."                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys"                 label   "Deform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."                 disablewhen "{ ar_mb_dform_enable == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             groupsimple {                 name    "group_shutter"                 label   "Camera Shutter"                  parm {                     name    "ar_mb_shutter"                     label   "Shutter Position"                     type    string                     default { "center" }                     help    "Decide where on the frame time the blur will be evaluated. The default is centered."                     disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 }"                     menu {                         "start"     "Start On Frame"                         "center"    "Center On Frame"                         "end"       "End On Frame"                         "custom"    "Custom Shutter"                     }                     parmtag { "spare_category" "Motion Blur" }                 }                 parm {                     name    "ar_mb_shutter_length"                     label   "Shutter Length"                     type    float                     default { "0.5" }                     disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 }"                     hidewhen "{ ar_mb_shutter == custom }"                     range   { 0 1 }                     parmtag { "spare_category" "Motion Blur" }                 }                 parm {                     name    "ar_mb_shutter_range"                     label   "Shutter Start/End"                     type    vector2                     size    2                     default { "-0.25" "0.25" }                     disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 }"                     hidewhen "{ ar_mb_shutter != custom }"                     range   { -1 1 }                     parmtag { "spare_category" "Motion Blur" }                 }                 parm {                     name    "ar_ignore_motion_blur"                     label   "Instantaneous Shutter for Motion Vectors"                     type    toggle                     default { "0" }                     help    "Ignore motion blur effects in camera for generating motion vectors."                     range   { 0 1 }                 }             }          }          group {             name    "folder0_4"             label   "Textures"              parm {                 name    "ar_texture_max_sharpen"                 label   "Sharpness"                 type    float                 invisible                 default { "1.5" }                 help    "Sharpens textures at the expense of increased file I/O. The theoretical optimum setting for sharpest results is to set this to AA_samples, but under most practical situations where texture I/O must be controlled, setting this to around 1.5 already gives sharp results at a moderate cost."                 range   { 1 10 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_diffuse_blur"                 label   "Diffuse Blur"                 type    log                 default { "0.03125" }                 help    "Blurring of texture for lookups by diffuse rays."                 range   { 0! 1 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_specular_blur"                 label   "Specular Blur"                 type    log                 default { "0" }                 help    "Blurring of texture for lookups by specular rays. When using the Cook-Torrance BRDF, textures are automatically blurred and this parameter is ignored."                 range   { 0! 1 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_max_memory_MB"                 label   "Cache Size (MB)"                 type    float                 default { "2048" }                 help    "Texture cache size in MB."                 disablewhen "{ ar_texture_caching_enable == 0 }"                 range   { 0! 4096 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_max_open_files"                 label   "Max. Open Textures"                 type    integer                 default { "0" }                 help    "The maximum number of files that the texture system keeps open at any given time to avoid excessive closing and re-opening of files when caching individual texture tiles. A value of 0 means the number is automatically computed by Arnold. Increasing this number may result in slightly better texture caching performance. On the other hand, if this value is higher than the maximum number of concurrently open files supported by the operating system (e.g. Linux vs Windows), some texture lookups may fail and return red."                 disablewhen "{ ar_texture_max_memory_MB == 0 }"                 range   { 0! 4096 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_accept_untiled"                 label   "Accept Untiled"                 type    toggle                 default { "1" }                 help    "High-resolution untiled texture maps are very inefficient to render, because they must be loaded entirely into memory as soon as the renderer needs to access a single texel. For that reason, you may want to use this flag to enforce that all your texture maps are already tiled in advance (perhaps by using a preprocessing tool like maketx). When this flag is enabled, any attempt at loading an untiled file will produce an error and abort the renderer."                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_autotile"                 label   "Auto-tile"                 type    integer                 default { "64" }                 help    "This is the size of the tiles when using auto-tiling. Bigger values mean less frequent texture loads, but use more memory. Use existing Tiled files: If .tx file with the same name of the texture is found, the renderer will use it."                 disablewhen "{ ar_texture_accept_untiled == 0 }"                 range   { 2! 512 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_accept_unmipped"                 label   "Accept Unmipped"                 type    toggle                 default { "1" }                 help    "Unmipped texture maps are inefficient to render, because filtering to reduce aliasing has to be done on the fly. For that reason, you may want to use this flag to enforce that all your texture maps are already mipmapped in advance (perhaps by using a preprocessing tool like maketx). When this flag is enabled, any attempt at loading an unmipped file will produce an error and abort the renderer. By default this flag is enabled, because most of the popular image formats such as JPEG don\'t support tiling."                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_automip"                 label   "Auto-mipmap"                 type    toggle                 default { "1" }                 help    "If a texture map file is not natively mipmapped (e.g. a JPEG file), enabling this option will trigger the automatic generation of a mipmap that will be stored in memory for the duration of the render. This mipmap generation increases render time, specially for scenes with many high resolution textures. This is in contrast to file formats that natively support mipmapping, such as TIFF and EXR, where the mipmap is generated only once (with a preprocessing tool like maketx). Use with care."                 disablewhen "{ ar_texture_accept_unmipped == 0 }"                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_auto_maketx"                 label   "Auto-generate TX Textures"                 type    toggle                 default { "1" }                 help    "Automatically generate or update the .tx texture corresponding to the texture files. If an up to date version already exists, the generation will be skipped. The .tx textures will be linearized according to the colorspace selected on the image shader."                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_use_existing_tx"                 label   "Use Existing TX Textures"                 type    toggle                 default { "1" }                 help    "If an untiled texture is requested (e.g. concrete.jpg) but a .tx file with the same filename is found (e.g. concrete.tx), the renderer will load the .tx file instead."                 parmtag { "spare_category" "Textures" }             }         }          group {             name    "folder0_5"             label   "Device"              parm {                 name    "ar_platform"                 label   "Platform"                 type    string                 invisible                 default { [ "__import__(\'sys\').platform" python ] }                 parmtag { "spare_category" "Device" }             }             groupsimple {                 name    "group_render_device"                 label   "Device"                 hidewhen "{ ar_platform == darwin }"                  parm {                     name    "ar_render_device"                     label   "Render Device"                     type    string                     default { "CPU" }                     help    "Specify the render devices."                     hidewhen "{ ar_platform == darwin }"                     menu {                         "CPU"   "CPU"                         "GPU"   "GPU (BETA)"                     }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_render_device_fallback"                     label   "Device Fallback"                     type    string                     default { "error" }                     help    "Specify the render devices."                     hidewhen "{ ar_platform == darwin }"                     menu {                         "error" "Error"                         "CPU"   "CPU"                     }                     parmtag { "spare_category" "Device" }                 }                 groupsimple {                     name    "group_auto_gpu"                     label   "Automatic Device Selection"                     hidewhen "{ ar_platform == darwin }"                      parm {                         name    "ar_gpu_default_names"                         label   "Device Expression"                         type    string                         default { "*" }                         help    "Select GPU names with this filter.  Note you cannot mix RTX and non-RTX graphics cards in the same render."                         hidewhen "{ ar_platform == darwin }"                         parmtag { "spare_category" "Device" }                     }                     parm {                         name    "ar_gpu_default_min_memory_MB"                         label   "Min. Memory (MB)"                         type    integer                         default { "512" }                         help    "Select GPU names with at least this amount of memory (MB)"                         hidewhen "{ ar_platform == darwin }"                         range   { 0! 2048 }                         parmtag { "spare_category" "Device" }                     }                 }                  groupsimple {                     name    "group_manual_gpu"                     label   "Manual Device Selection"                     hidewhen "{ ar_platform == darwin }"                      parm {                         name    "ar_manual_device_selection"                         label   "Enable Manual Device Selection"                         type    toggle                         default { "0" }                         help    "Choose whether to select devices manually"                         hidewhen "{ ar_platform == darwin }"                         parmtag { "spare_category" "Device" }                     }                     parm {                         name    "ar_device_selection"                         label   "Device Selection"                         type    string                         default { "" }                         help    "GPU device selection.  Note you cannot mix RTX and non-RTX graphics cards in the same render."                         disablewhen "{ ar_manual_device_selection == 0 } { ar_platform == darwin }"                         menutoggle {                             [ "import htoa.device" ]                             [ "return htoa.device.gpuDeviceMenu()" ]                             language python                         }                         parmtag { "spare_category" "Device" }                     }                 }                  groupsimple {                     name    "group_gpu_settings"                     label   "GPU Settings"                     hidewhen "{ ar_platform == darwin }"                      parm {                         name    "ar_gpu_max_texture_resolution"                         label   "Max. Texture Res."                         type    integer                         default { "0" }                         help    "This will limit the number of mipmap levels generated to be up to the specified resolution, unless the value is 0 in which case there is no maximum."                         disablewhen "{ ar_render_device == CPU }"                         hidewhen "{ ar_platform == darwin }"                         range   { 0! 2048 }                         parmtag { "spare_category" "Device" }                     }                 }              }              groupsimple {                 name    "group_cm"                 label   "Color Management"                  parm {                     name    "ar_color_space_singleton"                     label   "Color Space ROP"                     type    toggle                     default { "0" }                     help    "Specify that this ROP should be used to define the color spaces for TX conversion."                     parmtag { "script_callback" "__import__(\'htoa.colorspace\').colorspace.setColorSpaceRop(kwargs[\'node\'], kwargs[\'parm\'].eval())" }                     parmtag { "script_callback_language" "python" }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_ocio_enabled"                     label   "OCIO Enabled"                     type    toggle                     invisible                     default { [ "bool(__import__(\'htoa.ocio\').ocio.has_config)" python ] }                     help    "If OCIO was enabled and successfully loaded this will be true."                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_color_family_narrow"                     label   "LDR Color Space"                     type    string                     joinnext                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_sRGB_family" python ] }                     help    "If it exists in the OCIO config, this should be set to the name of the `sRGB` color space. This is used internally for input and output color spaces in `auto` mode for low dynamic range images. If set by the user, this color space is also used as a reference to detect the rendering color space gamut and white point."                     menu {                         [ "import htoa.ocio" ]                         [ "color_family_menu = htoa.ocio.colorFamilyMenu(view_display=False, filter_non_linear=True)" ]                         [ "color_space_menu = htoa.ocio.narrowColorSpaceMenu(kwargs[\'node\'].parm(\'ar_color_family_narrow\').eval())" ]                         [ "if color_space_menu and kwargs[\'node\'].parm(\'ar_color_space_narrow\').eval() not in color_space_menu:" ]                         [ "    kwargs[\'node\'].parm(\'ar_color_space_narrow\').set(color_space_menu[0])" ]                         [ "return color_family_menu" ]                         language python                     }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_color_space_narrow"                     label   "ar_color_space_narrow"                     type    string                     nolabel                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_sRGB" python ] }                     help    "If it exists in the OCIO config, this should be set to the name of the `sRGB` color space. This is used internally for input and output color spaces in `auto` mode for low dynamic range images. If set by the user, this color space is also used as a reference to detect the rendering color space gamut and white point."                     menu {                         [ "import htoa.ocio" ]                         [ "family = kwargs[\'node\'].parm(\'ar_color_family_narrow\').eval()" ]                         [ "return htoa.ocio.narrowColorSpaceMenu(family)" ]                         language python                     }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_color_family_linear"                     label   "Rendering Color Space"                     type    string                     joinnext                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_linear_family" python ] }                     help    "This is the default linear color space that Arnold will use as its rendering color space. Arnold\'s default color space is `sRGB Linear` but this can correspond to any linear color space if needed. If chromaticities for this linear color space can be guessed or are user specified certain spectral effects will take them into account, but not other adaptations for albedos, transparencies, etc are applied."                     menu {                         [ "import htoa.ocio" ]                         [ "color_family_menu = htoa.ocio.colorFamilyMenu(view_display=False, filter_linear=True)" ]                         [ "color_space_menu = htoa.ocio.renderColorSpaceMenu(kwargs[\'node\'].parm(\'ar_color_family_linear\').eval())" ]                         [ "if color_space_menu and kwargs[\'node\'].parm(\'ar_color_space_linear\').eval() not in color_space_menu:" ]                         [ "    kwargs[\'node\'].parm(\'ar_color_space_linear\').set(color_space_menu[0])" ]                         [ "return color_family_menu" ]                         language python                     }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_color_space_linear"                     label   "ar_color_space_linear"                     type    string                     nolabel                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_linear" python ] }                     help    "This is the default linear color space that Arnold will use as its rendering color space. Arnold\'s default color space is `sRGB Linear` but this can correspond to any linear color space if needed. If chromaticities for this linear color space can be guessed or are user specified certain spectral effects will take them into account, but not other adaptations for albedos, transparencies, etc are applied."                     menu {                         [ "import htoa.ocio" ]                         [ "family = kwargs[\'node\'].parm(\'ar_color_family_linear\').eval()" ]                         [ "return htoa.ocio.renderColorSpaceMenu(family)" ]                         language python                     }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_linear_chromaticities"                     label   "Custom Chromaticities"                     type    toggle                     default { "0" }                     help    "Specify render color space chromaticities. If they are not specified they will be gathered from the OCIO configuration."                     hidewhen "{ ar_ocio_enabled == 0 }"                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_chromaticity_red"                     label   "Red Primary"                     type    float                     size    2                     default { "0.64" "0.33" }                     help    "Chromaticity (x,y) of the red primary."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_chromaticity_green"                     label   "Green Primary"                     type    float                     size    2                     default { "0.3" "0.6" }                     help    "Chromaticity (x,y) of the green primary."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_chromaticity_blue"                     label   "Blue Primary"                     type    float                     size    2                     default { "0.15" "0.06" }                     help    "Chromaticity (x,y) of the blue primary."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "Device" }                 }                 parm {                     name    "ar_chromaticity_white"                     label   "White Point"                     type    float                     size    2                     default { "0.3127" "0.329" }                     help    "Chromaticity (x,y) of the white point."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "Device" }                 }             }          }          group {             name    "folder0_6"             label   "Baking"              parm {                 name    "ar_baking_enable"                 label   "Enable Texture Baking"                 type    toggle                 default { "0" }                 help    "Enable texture baking. Not supported on GPU."                 disablewhen "{ ar_render_device == GPU }"                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_resolution"                 label   "Resolution"                 type    intlog                 default { "256" }                 help    "Texture baking resolution, we are using square textures."                 disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                 range   { 1 1024 }                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_extend_edges"                 label   "Extend Edges"                 type    toggle                 default { "1" }                 help    "Extend the edges"                 disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_udims"                 label   "Udims"                 type    string                 joinnext                 default { "" }                 help    "List of udim\'s UV pairs or udims. Example: 0:1 3:3 4:2 or 1011 1034 1025"                 disablewhen "{ ar_baking_enable == 0 } { ar_baking_udims_all == 1 } { ar_render_device == GPU ar_platform != darwin }"                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_udims_all"                 label   "All"                 type    toggle                 default { "0" }                 help    "Bake all the udims"                 disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_normal_offset"                 label   "Surface Offset"                 type    float                 default { "0.001" }                 help    "Ray cast from the mesh with the given offset along the normal"                 disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                 range   { 0 10 }                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_uv_offset"                 label   "UV Offset"                 type    float                 size    2                 default { "0" "0" }                 disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                 range   { 0 10 }                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_uv_scale"                 label   "UV Scale"                 type    float                 size    2                 default { "1" "1" }                 disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                 range   { 0 10 }                 parmtag { "spare_category" "Baking" }             }             multiparm {                 name    "ar_baking_meshes"                 label    "Meshes"                 disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                 parmtag { "spare_category" "Baking" }                  parm {                     name    "ar_enable_mesh#"                     label   "Enable Mesh #"                     type    toggle                     nolabel                     joinnext                     default { "1" }                     disablewhen "{ ar_baking_enable == 0 } { ar_render_device == GPU ar_platform != darwin }"                     parmtag { "spare_category" "Baking" }                 }                 parm {                     name    "ar_baking_mesh#"                     label   "Mesh #"                     type    oppath                     default { "" }                     disablewhen "{ ar_baking_enable == 0 } { ar_enable_mesh# == 0 } { ar_render_device == GPU ar_platform != darwin }"                     parmtag { "opfilter" "!!OBJ!!" }                     parmtag { "oprelative" "." }                     parmtag { "spare_category" "Baking" }                 }                 parm {                     name    "ar_baking_uvset#"                     label   "UV Set #"                     type    string                     default { "" }                     disablewhen "{ ar_baking_enable == 0 } { ar_enable_mesh# == 0 } { ar_render_device == GPU ar_platform != darwin }"                     menureplace {                         [ "[\'\', \'Default        (uv)\', \'uv2\', \'UV Set 2\', \'uv3\', \'UV Set 3\', \'uv4\', \'UV Set 4\', \'uv5\', \'UV Set 5\', \'uv6\', \'UV Set 6\', \'uv7\', \'UV Set 7\', \'uv8\', \'UV Set 8\' ]" ]                         language python                     }                     parmtag { "spare_category" "Baking" }                 }             }          }          group {             name    "folder0_7"             label   "MaterialX"              parm {                 name    "ar_materialx_enable"                 label   "Enable MaterialX Export"                 type    toggle                 default { "0" }                 parmtag { "spare_category" "MaterialX" }             }             parm {                 name    "ar_materialx_file"                 label   "MaterialX File"                 type    file                 default { "" }                 help    "Specifies the output path for MaterialX ass files."                 disablewhen "{ ar_materialx_enable == 0 }"                 parmtag { "filechooser_mode" "write" }                 parmtag { "filechooser_pattern" "*.mtlx" }                 parmtag { "spare_category" "MaterialX" }             }             parm {                 name    "ar_materialx_look"                 label   "Look"                 type    string                 default { "" }                 help    "Output look name that will be created/appended"                 disablewhen "{ ar_materialx_enable == 0 }"                 menureplace {                     [ "__import__(\'htoa.operator\').operator.lookMenu(kwargs[\'node\'].parm(\'ar_materialx_file\').eval())" ]                     language python                 }                 parmtag { "spare_category" "MaterialX" }             }             parm {                 name    "ar_materialx_relative"                 label   "Relative Assignment"                 type    toggle                 default { "1" }                 help    "If true, the assignments for nodes will be relative to their top-most parent node"                 disablewhen "{ ar_materialx_enable == 0 }"                 parmtag { "spare_category" "MaterialX" }             }             multiparm {                 name    "ar_materialx_properties"                 label    "Properties"                 disablewhen "{ ar_materialx_enable == 0 }"                 parmtag { "spare_category" "MaterialX" }                  parm {                     name    "ar_materialx_property#"                     label   "Property #"                     type    string                     default { "" }                     help    "A parameter to be added to the property assignments"                     disablewhen "{ ar_materialx_enable == 0 }"                     parmtag { "spare_category" "MaterialX" }                 }             }          }          group {             name    "folder0_8"             label   "System"              parm {                 name    "ar_force_threads"                 label   "Force Threads"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Allow manual setting the number of render threads instead of using an optimal number based on the number of hardware processing cores."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_threads"                 label   "Render Threads"                 type    integer                 default { "0" }                 help    "If ar_force_threads is enabled, this will let you manually set the number of rendering threads. The default of 0 will use all processing cores and negative values mean use all but that many cores. For example, threads=-2 means use all but 2 cores, while threads=2 means only use 2 cores. This is useful when you want to leave one or two cores for other tasks. This parameter is never written in an .ass file by design, and will only affect interactive or batch renders."                 disablewhen "{ ar_force_threads == 0 }"                 range   { -255! 256! }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_thread_priority"                 label   "Thread Priority"                 type    string                 default { "lowest" }                 help    "Specifies the thread priority for rendering (Windows only)."                 menu {                     "lowest"    "Lowest"                     "low"       "Low"                     "medium"    "Medium"                     "high"      "High"                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_pin_threads"                 label   "Pin Threads"                 type    string                 default { "auto" }                 help    "Arnold can pin threads on Linux, so they don\'t jump between multiple processors. This can improve scalability in modern machines, multiple processors. It can be set to off, on or auto. By default is set to auto, meaning that if the number of threads is more than half the number of logical cores on the machine, Arnold will pin the threads."                 menu {                     "off"   "Off"                     "on"    "On"                     "auto"  "Auto"                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_bucket_scanning"                 label   "Bucket Scanning"                 type    string                 default { "spiral" }                 help    "Specifies the spatial order in which the image buckets (i.e. threads) will be processed. By default, buckets start in the center of the image and proceed outwards in a spiral pattern."                 menu {                     "top"       "Top"                     "left"      "Left"                     "random"    "Random"                     "spiral"    "Spiral"                     "hilbert"   "Hilbert"                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_bucket_size"                 label   "Bucket Size"                 type    integer                 default { "64" }                 help    "The size of the image buckets. The default size is 64x64 pixels, which is a good compromise; bigger buckets use more memory, while smaller buckets may perform redundant computations and filtering and thus render slower but give initial faster feedback."                 range   { 16! 256 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive"                 label   "      Progressive AA  "                 type    toggle                 joinnext                 default { "1" }                 help    "Apply an iterative progressive render to the region tool, starting from the lowest selected AA until the current AA samples value."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_3"                 label   "8x8"                 type    toggle                 joinnext                 default { "1" }                 help    "One sample per 8x8 pixels (-3)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_2"                 label   "4x4"                 type    toggle                 joinnext                 default { "0" }                 help    "One sample per 4x4 pixels (-2)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_1"                 label   "2x2"                 type    toggle                 joinnext                 default { "1" }                 help    "One sample per 2x2 pixels (-1)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_0"                 label   "1x1"                 type    toggle                 default { "0" }                 help    "One sample per pixel (0)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_plugin_searchpath"                 label   "Plugin Path"                 type    directory                 default { "" }                 help    "Specifies the directory where to search for Arnold plugins such as shaders, procedurals, volumes, etc."                 parmtag { "filechooser_mode" "read" }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_procedural_searchpath"                 label   "Procedural Path"                 type    directory                 default { "" }                 help    "Specifies the directory where to search for procedural files."                 parmtag { "filechooser_mode" "read" }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_texture_searchpath"                 label   "Texture Path"                 type    directory                 default { "" }                 help    "Specifies the directory where to search for Arnold texture maps and IES files. This works in conjunction with the \\"Save Texture Paths\\" option in the ASS tab."                 parmtag { "filechooser_mode" "read" }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_mplay_label"                 label   "MPlay Session"                 type    string                 default { "" }                 help    "When an MPlay render is triggered, it will only output to MPlay sessions with that label. If none exist, it will create an MPlay session with that label. This is incredibly useful for users with multiple workspaces, to avoid constantly hunt for an open MPlay window and move it to their active workspace."                 menureplace {                     [ "__import__(\'htoa\').properties.mplayLabelMenu()" ]                     language python                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_create_intermediate_directories"                 label   "Create Intermediate Directories"                 type    toggle                 default { "1" }                 help    "Create intermediate parent directories when rendering to image or ASS files."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_flush_sop_cache"                 label   "Flush SOP Cache"                 type    toggle                 default { "1" }                 help    "Flush SOP cache after each frame to reclaim memory."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_pick_material"                 label   "Pick Material in Render View"                 type    toggle                 default { "1" }                 help    "Generate the Op_Id AOV to enable material picking in the Render View with Ctrl+LMB. The ID built-in AOV will be repurposed for this and will not be available in the Render View context."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_inherit_properties"                 label   "Inherit Properties"                 type    toggle                 default { "0" }                 help    "Enable properties inheritance for geometry at the expense of translation time."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_parallel_node_init"                 label   "Parallel Node Initialization"                 type    toggle                 default { "1" }                 help    "Initialization and update of scene nodes can now be multi-threaded. This can significantly lower the scene preparation time in complex scenes with many objects, shaders or lights."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_enable_bucket_work_sharing"                 label   "Bucket Work Sharing"                 type    toggle                 default { "1" }                 help    "Share work among all threads for the last remaining buckets."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_abort_on_error"                 label   "Abort On Error"                 type    toggle                 default { "1" }                 help    "Aborts rendering as soon as an error is detected. This is the recommended setting. In general, you should not ignore important error messages, or you\'ll risk crashes, rendering artifacts and undefined behaviour."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_abort_on_license_fail"                 label   "Abort On License Fail"                 type    toggle                 default { "0" }                 help    "Aborts rendering if when the render starts the license is not detected. If not set and no license is found, images will be watermarked."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_skip_license_check"                 label   "Render with Watermarks (Skip License Check)"                 type    toggle                 default { "0" }                 help    "Do not try to check out a license and thus render with watermarks."                 parmtag { "spare_category" "System" }             }         }          group {             name    "folder0_9"             label   "Diagnostics"              parm {                 name    "ar_log_file_enable"                 label   "Log File"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Log to file"                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_file"                 label   "Log to File"                 type    file                 default { "" }                 help    "Specifies the output path for Arnold log files."                 disablewhen "{ ar_log_file_enable == 0 }"                 parmtag { "filechooser_mode" "write" }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_verbosity"                 label   "Log Verbosity"                 type    string                 joinnext                 default { "warnings" }                 help    "Specifies the verbosity level and whether log messages are sent to the console or written to a file."                 menu {                     "warnings"  "Warnings Only"                     "info"      "Info"                     "detailed"  "Detailed"                     "debug"     "Debug"                 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_max_warnings"                 label   "   Max. Warnings"                 type    integer                 default { "5" }                 help    "Limits the number of warning messages that are sent to the console."                 range   { 0! 1000 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_console_enable"                 label   "Log to Console"                 type    toggle                 default { "1" }                 help    "Log to console."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_stats_file_enable"                 label   "Stats File"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Log stats to file"                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_stats_file"                 label   "Stats File Path"                 type    file                 default { "$HIP/arnold_stats.json" }                 help    "Specifies the output path for the Arnold stats file."                 disablewhen "{ ar_stats_file_enable == 0 }"                 parmtag { "filechooser_mode" "write" }                 parmtag { "filechooser_pattern" "*.json" }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_stats_mode"                 label   "Stats Mode"                 type    integer                 default { "1" }                 menu {                     "0" "Overwrite"                     "1" "Append"                 }                 range   { 0 10 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_profile_file_enable"                 label   "Profile"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Log profile to file"                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_profile_file"                 label   "Profile File Path"                 type    file                 default { "$HIP/arnold_profile.json" }                 help    "Specifies the output path for the Arnold profile file."                 disablewhen "{ ar_profile_file_enable == 0 }"                 parmtag { "filechooser_mode" "write" }                 parmtag { "filechooser_pattern" "*.json" }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_texture_per_file_stats"                 label   "Detailed Texture Statistics"                 type    toggle                 default { "1" }                 help    "Enable per file texture statistics."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_plugins"                 label   "Detailed Plugins Information"                 type    toggle                 default { "0" }                 help    "Show details about plugins loaded."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "my_sep_diagnostics1"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_ignore_operators"                 label   "Ignore Operators"                 type    toggle                 default { "0" }                 help    "Ignore operator graph."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_textures"                 label   "Ignore Textures"                 type    toggle                 default { "0" }                 help    "Ignore all textures when rendering."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_shaders"                 label   "Ignore Shaders"                 type    toggle                 default { "0" }                 help    "Ignore all shaders when rendering. By default Arnold will render with a simple \\"N dot eye\\" shader."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_atmosphere"                 label   "Ignore Atmosphere"                 type    toggle                 default { "0" }                 help    "Ignore all atmospheric shaders."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_lights"                 label   "Ignore Lights"                 type    toggle                 default { "0" }                 help    "Ignore all light sources."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_shadows"                 label   "Ignore Shadows"                 type    toggle                 default { "0" }                 help    "Ignore shadows from all light sources."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_subdivision"                 label   "Ignore Subdivision"                 type    toggle                 default { "0" }                 help    "No objects will be subdivided."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_displacement"                 label   "Ignore Displacement"                 type    toggle                 default { "0" }                 help    "Displacements will be ignored."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_bump"                 label   "Ignore Bump"                 type    toggle                 default { "0" }                 help    "Bump mapping will be ignored."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_smoothing"                 label   "Ignore Normal Smoothing"                 type    toggle                 default { "0" }                 help    "Polygon normals will not be smoothed, resulting in a faceted appearance."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_dof"                 label   "Ignore Depth of Field"                 type    toggle                 default { "0" }                 help    "Ignore depth of field effects."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_sss"                 label   "Ignore Sub-Surface Scattering"                 type    toggle                 default { "0" }                 help    "Ignore Subsurface Scattering calculations."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_motion"                 label   "Ignore Motion"                 type    toggle                 default { "0" }                 help    "Ignore all motion effects."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "my_sep_diagnostics2"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_error_color_bad_texture"                 label   "Bad Texture Color"                 type    color                 size    3                 default { "1" "0" "0" }                 help    "Color to use for bad textures."                 range   { 0 1 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_error_color_bad_pixel"                 label   "NaN Pixel Color"                 type    color                 size    3                 default { "0" "0" "1" }                 help    "Color to use for bad pixels (NaNs)."                 range   { 0 1 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_error_color_bad_shader"                 label   "Bad Shader Color"                 type    color                 size    3                 default { "1" "0" "1" }                 help    "Color to use for bad shaders."                 range   { 0 1 }                 parmtag { "spare_category" "Diagnostics" }             }         }      }      group {         name    "main6_2"         label   "Archive"         hidewhentab "{ ar_ass_export_authorized == 0 }"          parm {             name    "ar_ass_export_enable"             baseparm             label   "Export ASS File"             nolabel             joinnext             export  none         }         parm {             name    "ar_ass_file"             baseparm             label   "Export ASS File"             export  none         }         parm {             name    "ar_node_prefix_enable"             baseparm             label   "Enable Node Prefix"             nolabel             joinnext             export  none         }         parm {             name    "ar_node_prefix"             baseparm             label   "Node Prefix"             export  none         }         parm {             name    "ar_node_suffix_enable"             baseparm             label   "Enable Node Suffix"             nolabel             joinnext             export  none         }         parm {             name    "ar_node_suffix"             baseparm             label   "Node Suffix"             export  none         }         parm {             name    "ar_ass_export_authorized"             baseparm             label   "Authorize Exporting ASS Files"             invisible             export  none         }         parm {             name    "ar_binary_ass"             baseparm             label   "Binary Encoding"             export  none         }         parm {             name    "ar_ass_export_options"             baseparm             label   "Export Options"             export  none         }         parm {             name    "ar_ass_export_color_managers"             baseparm             label   "Export Color Managers"             export  none         }         parm {             name    "ar_ass_export_cameras"             baseparm             label   "Export Cameras"             export  none         }         parm {             name    "ar_ass_export_lights"             baseparm             label   "Export Lights"             export  none         }         parm {             name    "ar_ass_export_shapes"             baseparm             label   "Export Shapes"             export  none         }         parm {             name    "ar_ass_export_shaders"             baseparm             label   "Export Shaders"             export  none         }         parm {             name    "ar_ass_export_shader_assignments"             baseparm             label   "Export Shader Assignments"             export  none         }         parm {             name    "ar_ass_export_operators"             baseparm             label   "Export Operators"             export  none         }         parm {             name    "ar_ass_export_overrides"             baseparm             label   "Export Overrides"             export  none         }         parm {             name    "ar_ass_export_drivers"             baseparm             label   "Export Output Drivers"             export  none         }         parm {             name    "ar_ass_export_filters"             baseparm             label   "Export Pixel Filters"             export  none         }         parm {             name    "ar_export_asstoc"             baseparm             label   "Export .asstoc File"             export  none         }         parm {             name    "ar_prepend_htoa_paths"             baseparm             label   "Prepend Plugin Paths"             export  none         }         parm {             name    "ar_ass_expand_procedurals"             baseparm             label   "Expand Procedurals"             export  none         }         parm {             name    "ar_ass_absolute_texture_paths"             baseparm             label   "Absolute Texture Paths"             export  none         }         parm {             name    "ar_ass_absolute_procedural_paths"             baseparm             label   "Absolute Procedural Paths"             export  none         }     }      group {         name    "main6_3"         label   "Scripts"          parm {             name    "tprerender"             baseparm             label   "tprerender"             nolabel             joinnext             export  none         }         parm {             name    "prerender"             baseparm             label   "Pre-Render"             joinnext             export  none         }         parm {             name    "lprerender"             baseparm             label   "lprerender"             nolabel             export  none         }         parm {             name    "tpreframe"             baseparm             label   "tpreframe"             nolabel             joinnext             export  none         }         parm {             name    "preframe"             baseparm             label   "Pre-Frame"             joinnext             export  none         }         parm {             name    "lpreframe"             baseparm             label   "lpreframe"             nolabel             export  none         }         parm {             name    "tpostframe"             baseparm             label   "tpostframe"             nolabel             joinnext             export  none         }         parm {             name    "postframe"             baseparm             label   "Post-Frame"             joinnext             export  none         }         parm {             name    "lpostframe"             baseparm             label   "lpostframe"             nolabel             export  none         }         parm {             name    "tpostrender"             baseparm             label   "tpostrender"             nolabel             joinnext             export  none         }         parm {             name    "postrender"             baseparm             label   "Post-Render"             joinnext             export  none         }         parm {             name    "lpostrender"             baseparm             label   "lpostrender"             nolabel             export  none         }     }      group {         name    "main6_4"         label   "SOHO"         invisibletab          parm {             name    "soho_program"             baseparm             label   "SOHO Program"             export  none         }         parm {             name    "soho_outputmode"             baseparm             label   "SOHO Output Mode"             export  none         }         parm {             name    "soho_pipecmd"             baseparm             label   "Command"             export  none         }         parm {             name    "soho_diskfile"             baseparm             label   "Script Disk File"             export  none         }         parm {             name    "soho_errormode"             baseparm             label   "Error Mode"             export  none         }         parm {             name    "soho_shopstyle"             baseparm             label   "SOHO SHOP Style"             export  none         }         parm {             name    "soho_precision"             baseparm             label   "Float Precision"             export  none         }         parm {             name    "soho_indentstep"             baseparm             label   "Indent Step"             export  none         }         parm {             name    "soho_almostzero"             baseparm             label   "Almost Zero"             export  none         }         parm {             name    "soho_multiframe"             baseparm             label   "Multi-frame mode"             export  none         }         parm {             name    "soho_safename"             baseparm             label   "Safe Object names"             export  none         }         parm {             name    "soho_ipr_support"             baseparm             label   "SOHO IPR Support"             export  none         }         parm {             name    "soho_foreground"             baseparm             label   "Block Until Render Completes"             export  none         }     }      parm {         name    "renderpreview"         baseparm         label   "Render to MPlay"         invisible         joinnext         export  none     }     parm {         name    "executebackground"         baseparm         label   "Render to Disk in Background"         invisible         export  none     } ' $_out_name
opparm $_out_name  ar_exr_metadata ( 0 ) ar_aovs ( 1 ) ar_baking_meshes ( 0 ) ar_materialx_properties ( 0 )
chblockbegin
chadd -t 0 0 $_out_name f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_out_name/f1
chadd -t 0 0 $_out_name f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_out_name/f2
chadd -t 0 0 $_out_name ar_ass_export_authorized
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.licenseCategory() in (hou.licenseCategoryType.Commercial, hou.licenseCategoryType.Education)' -l p $_out_name/ar_ass_export_authorized
chadd -t 0 0 $_out_name soho_outputmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_ass_export_enable"), 2, 0)' $_out_name/soho_outputmode
chadd -t 0 0 $_out_name soho_pipecmd
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.searchpath\nreturn htoa.searchpath.hick' -l p $_out_name/soho_pipecmd
chadd -t 0 0 $_out_name vm_picture
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("ar_picture")' $_out_name/vm_picture
chadd -t 0 0 $_out_name ar_overscany
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_overscanx")' $_out_name/ar_overscany
chadd -t 0 0 $_out_name ar_overscanz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_overscanx")' $_out_name/ar_overscanz
chadd -t 0 0 $_out_name ar_overscanw
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_overscanx")' $_out_name/ar_overscanw
chadd -t 0 0 $_out_name ar_AA_samples_extra
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_AA_samples_max") - ch("ar_AA_samples")' $_out_name/ar_AA_samples_extra
chadd -t 0 0 $_out_name ar_AA_seed
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$F' $_out_name/ar_AA_seed
chadd -t 0 0 $_out_name ar_info_samples_camera
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoCamera()' -l p $_out_name/ar_info_samples_camera
chadd -t 0 0 $_out_name ar_info_samples_diffuse1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoDiffuse()' -l p $_out_name/ar_info_samples_diffuse1
chadd -t 0 0 $_out_name ar_info_samples_diffuse2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoDiffuseDepth()' -l p $_out_name/ar_info_samples_diffuse2
chadd -t 0 0 $_out_name ar_info_samples_specular1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoSpecular()' -l p $_out_name/ar_info_samples_specular1
chadd -t 0 0 $_out_name ar_info_samples_specular2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoSpecularDepth()' -l p $_out_name/ar_info_samples_specular2
chadd -t 0 0 $_out_name ar_info_samples_transmission1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTransmission()' -l p $_out_name/ar_info_samples_transmission1
chadd -t 0 0 $_out_name ar_info_samples_transmission2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTransmissionDepth()' -l p $_out_name/ar_info_samples_transmission2
chadd -t 0 0 $_out_name ar_info_samples_total1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTotal()' -l p $_out_name/ar_info_samples_total1
chadd -t 0 0 $_out_name ar_info_samples_total2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTotalDepth()' -l p $_out_name/ar_info_samples_total2
chadd -t 0 0 $_out_name ar_platform
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'sys\').platform' -l p $_out_name/ar_platform
chadd -t 0 0 $_out_name ar_ocio_enabled
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'bool(__import__(\'htoa.ocio\').ocio.has_config)' -l p $_out_name/ar_ocio_enabled
chadd -t 0 0 $_out_name ar_color_family_narrow
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_sRGB_family' -l p $_out_name/ar_color_family_narrow
chadd -t 0 0 $_out_name ar_color_space_narrow
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_sRGB' -l p $_out_name/ar_color_space_narrow
chadd -t 0 0 $_out_name ar_color_family_linear
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear_family' -l p $_out_name/ar_color_family_linear
chadd -t 0 0 $_out_name ar_color_space_linear
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear' -l p $_out_name/ar_color_space_linear
chblockend
opparm $_out_name main6 ( 1 1 1 1 1 ) ar_picture ( '$ELMTS/render/$HIPNAME/$OS/$HIPNAME.$OS.$F4.png' ) ar_picture_format ( png ) ar_png_format ( int16 ) ar_png_color_space ( sRGB ) ar_exr_color_space ( linear ) ar_aovs ( 1 ) ar_aov_label1 ( A ) ar_aov_separate1 ( on ) ar_aov_separate_file1 ( '$ELMTS/render/$HIPNAME/$OS/$HIPNAME.$OS.$F4.png' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_name
opexprlanguage -s hscript $_out_name
opuserdata -n '___Version___' -v '' $_out_name
opset -p on $_out_name

opcf $arg1
opwire -n $_out_name -0 $_out_name_ARNOLD
opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_out_name
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_out_name_ARNOLD
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
